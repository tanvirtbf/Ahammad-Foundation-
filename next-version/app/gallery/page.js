'use client';
import { useState } from 'react';

export default function Gallery() {
  const [activeCategory, setActiveCategory] = useState('all');
  const [selectedImage, setSelectedImage] = useState(null);

  const categories = [
    { id: 'all', name: '‡¶∏‡¶¨ ‡¶õ‡¶¨‡¶ø', icon: 'üñºÔ∏è' },
    { id: 'education', name: '‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ', icon: 'üìö' },
    { id: 'health', name: '‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø', icon: 'üè•' },
    { id: 'food', name: '‡¶ñ‡¶æ‡¶¶‡ßç‡¶Ø ‡¶¨‡¶ø‡¶§‡¶∞‡¶£', icon: 'üçΩÔ∏è' },
    { id: 'events', name: '‡¶Ö‡¶®‡ßÅ‡¶∑‡ßç‡¶†‡¶æ‡¶®', icon: 'üéâ' },
    { id: 'training', name: '‡¶™‡ßç‡¶∞‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶£', icon: 'üõ†Ô∏è' }
  ];

  const images = [
    {
      id: 1,
      title: "‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ ‡¶¨‡ßÉ‡¶§‡ßç‡¶§‡¶ø ‡¶™‡ßç‡¶∞‡¶¶‡¶æ‡¶® ‡¶Ö‡¶®‡ßÅ‡¶∑‡ßç‡¶†‡¶æ‡¶®",
      category: "education",
      description: "‡¶Æ‡ßá‡¶ß‡¶æ‡¶¨‡ßÄ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ‡¶¶‡ßá‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶¨‡ßÉ‡¶§‡ßç‡¶§‡¶ø ‡¶™‡ßç‡¶∞‡¶¶‡¶æ‡¶®",
      date: "‡ßß‡ß´ ‡¶ú‡¶æ‡¶®‡ßÅ‡¶Ø‡¶º‡¶æ‡¶∞‡¶ø, ‡ß®‡ß¶‡ß®‡ß´"
    },
    {
      id: 2,
      title: "‡¶¨‡¶ø‡¶®‡¶æ‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø‡ßá ‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø ‡¶ï‡ßç‡¶Ø‡¶æ‡¶Æ‡ßç‡¶™",
      category: "health",
      description: "‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ‡¶æ‡¶û‡ßç‡¶ö‡¶≤‡ßá ‡¶ö‡¶ø‡¶ï‡¶ø‡ßé‡¶∏‡¶æ ‡¶∏‡ßá‡¶¨‡¶æ ‡¶™‡ßç‡¶∞‡¶¶‡¶æ‡¶®",
      date: "‡ßß‡ß¶ ‡¶ú‡¶æ‡¶®‡ßÅ‡¶Ø‡¶º‡¶æ‡¶∞‡¶ø, ‡ß®‡ß¶‡ß®‡ß´"
    },
    {
      id: 3,
      title: "‡¶∂‡ßÄ‡¶§‡¶ï‡¶æ‡¶≤‡ßÄ‡¶® ‡¶ï‡¶Æ‡ßç‡¶¨‡¶≤ ‡¶¨‡¶ø‡¶§‡¶∞‡¶£",
      category: "food",
      description: "‡¶¶‡¶∞‡¶ø‡¶¶‡ßç‡¶∞ ‡¶™‡¶∞‡¶ø‡¶¨‡¶æ‡¶∞‡¶ó‡ßÅ‡¶≤‡ßã‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶ï‡¶Æ‡ßç‡¶¨‡¶≤ ‡¶¨‡¶ø‡¶§‡¶∞‡¶£",
      date: "‡ß´ ‡¶ú‡¶æ‡¶®‡ßÅ‡¶Ø‡¶º‡¶æ‡¶∞‡¶ø, ‡ß®‡ß¶‡ß®‡ß´"
    },
    {
      id: 4,
      title: "‡¶¨‡¶æ‡¶∞‡ßç‡¶∑‡¶ø‡¶ï ‡¶∏‡¶Æ‡ßç‡¶Æ‡ßá‡¶≤‡¶® ‡ß®‡ß¶‡ß®‡ß™",
      category: "events",
      description: "‡¶∏‡ßç‡¶¨‡ßá‡¶ö‡ßç‡¶õ‡¶æ‡¶∏‡ßá‡¶¨‡¶ï‡¶¶‡ßá‡¶∞ ‡¶¨‡¶æ‡¶∞‡ßç‡¶∑‡¶ø‡¶ï ‡¶∏‡¶Æ‡ßç‡¶Æ‡ßá‡¶≤‡¶®",
      date: "‡ß®‡ß´ ‡¶°‡¶ø‡¶∏‡ßá‡¶Æ‡ßç‡¶¨‡¶∞, ‡ß®‡ß¶‡ß®‡ß™"
    },
    {
      id: 5,
      title: "‡¶ï‡¶æ‡¶∞‡¶ø‡¶ó‡¶∞‡¶ø ‡¶™‡ßç‡¶∞‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶£ ‡¶ï‡¶∞‡ßç‡¶Æ‡¶∂‡¶æ‡¶≤‡¶æ",
      category: "training",
      description: "‡¶Ø‡ßÅ‡¶¨‡¶ï‡¶¶‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ï‡¶Æ‡ßç‡¶™‡¶ø‡¶â‡¶ü‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶£",
      date: "‡ß®‡ß¶ ‡¶°‡¶ø‡¶∏‡ßá‡¶Æ‡ßç‡¶¨‡¶∞, ‡ß®‡ß¶‡ß®‡ß™"
    },
    {
      id: 6,
      title: "‡¶®‡¶§‡ßÅ‡¶® ‡¶∏‡ßç‡¶ï‡ßÅ‡¶≤ ‡¶â‡¶¶‡ßç‡¶¨‡ßã‡¶ß‡¶®",
      category: "education",
      description: "‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ‡¶æ‡¶û‡ßç‡¶ö‡¶≤‡ßá ‡¶®‡¶§‡ßÅ‡¶® ‡¶™‡ßç‡¶∞‡¶æ‡¶•‡¶Æ‡¶ø‡¶ï ‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡¶Ø‡¶º ‡¶â‡¶¶‡ßç‡¶¨‡ßã‡¶ß‡¶®",
      date: "‡ßß‡ß´ ‡¶°‡¶ø‡¶∏‡ßá‡¶Æ‡ßç‡¶¨‡¶∞, ‡ß®‡ß¶‡ß®‡ß™"
    },
    {
      id: 7,
      title: "‡¶á‡¶´‡¶§‡¶æ‡¶∞ ‡¶¨‡¶ø‡¶§‡¶∞‡¶£ ‡¶ï‡¶æ‡¶∞‡ßç‡¶Ø‡¶ï‡ßç‡¶∞‡¶Æ",
      category: "food",
      description: "‡¶∞‡¶Æ‡¶ú‡¶æ‡¶® ‡¶Æ‡¶æ‡¶∏‡ßá ‡¶á‡¶´‡¶§‡¶æ‡¶∞ ‡¶¨‡¶ø‡¶§‡¶∞‡¶£",
      date: "‡ßß‡ß¶ ‡¶è‡¶™‡ßç‡¶∞‡¶ø‡¶≤, ‡ß®‡ß¶‡ß®‡ß™"
    },
    {
      id: 8,
      title: "‡¶ö‡ßã‡¶ñ‡ßá‡¶∞ ‡¶ö‡¶ø‡¶ï‡¶ø‡ßé‡¶∏‡¶æ ‡¶ï‡ßç‡¶Ø‡¶æ‡¶Æ‡ßç‡¶™",
      category: "health",
      description: "‡¶¨‡¶ø‡¶®‡¶æ‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø‡ßá ‡¶ö‡ßã‡¶ñ‡ßá‡¶∞ ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ ‡¶ì ‡¶ö‡¶∂‡¶Æ‡¶æ ‡¶¨‡¶ø‡¶§‡¶∞‡¶£",
      date: "‡ß´ ‡¶Æ‡¶æ‡¶∞‡ßç‡¶ö, ‡ß®‡ß¶‡ß®‡ß™"
    },
    {
      id: 9,
      title: "‡¶Æ‡¶π‡¶ø‡¶≤‡¶æ ‡¶ï‡ßç‡¶∑‡¶Æ‡¶§‡¶æ‡¶Ø‡¶º‡¶® ‡¶ï‡¶∞‡ßç‡¶Æ‡¶∂‡¶æ‡¶≤‡¶æ",
      category: "training",
      description: "‡¶Æ‡¶π‡¶ø‡¶≤‡¶æ‡¶¶‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶∏‡ßá‡¶≤‡¶æ‡¶á ‡¶™‡ßç‡¶∞‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶£",
      date: "‡ß®‡ßÆ ‡¶´‡ßá‡¶¨‡ßç‡¶∞‡ßÅ‡¶Ø‡¶º‡¶æ‡¶∞‡¶ø, ‡ß®‡ß¶‡ß®‡ß™"
    },
    {
      id: 10,
      title: "‡¶¨‡¶®‡ßç‡¶Ø‡¶æ ‡¶§‡ßç‡¶∞‡¶æ‡¶£ ‡¶¨‡¶ø‡¶§‡¶∞‡¶£",
      category: "food",
      description: "‡¶¨‡¶®‡ßç‡¶Ø‡¶æ ‡¶Ü‡¶ï‡ßç‡¶∞‡¶æ‡¶®‡ßç‡¶§ ‡¶è‡¶≤‡¶æ‡¶ï‡¶æ‡¶Ø‡¶º ‡¶§‡ßç‡¶∞‡¶æ‡¶£ ‡¶∏‡¶æ‡¶Æ‡¶ó‡ßç‡¶∞‡ßÄ ‡¶¨‡¶ø‡¶§‡¶∞‡¶£",
      date: "‡ßß‡ß´ ‡¶Ü‡¶ó‡¶∏‡ßç‡¶ü, ‡ß®‡ß¶‡ß®‡ß©"
    },
    {
      id: 11,
      title: "‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶ï ‡¶™‡ßç‡¶∞‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶£ ‡¶ï‡¶∞‡ßç‡¶Æ‡¶∏‡ßÇ‡¶ö‡¶ø",
      category: "training",
      description: "‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ‡ßÄ‡¶£ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶ï‡¶¶‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶£ ‡¶ï‡¶∞‡ßç‡¶Æ‡¶∏‡ßÇ‡¶ö‡¶ø",
      date: "‡ßß‡ß¶ ‡¶ú‡ßÅ‡¶≤‡¶æ‡¶á, ‡ß®‡ß¶‡ß®‡ß©"
    },
    {
      id: 12,
      title: "‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø ‡¶∏‡¶ö‡ßá‡¶§‡¶®‡¶§‡¶æ ‡¶∏‡ßá‡¶Æ‡¶ø‡¶®‡¶æ‡¶∞",
      category: "health",
      description: "‡¶ï‡¶Æ‡¶ø‡¶â‡¶®‡¶ø‡¶ü‡¶ø ‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø ‡¶∏‡¶ö‡ßá‡¶§‡¶®‡¶§‡¶æ ‡¶ï‡¶∞‡ßç‡¶Æ‡¶∏‡ßÇ‡¶ö‡¶ø",
      date: "‡ß´ ‡¶ú‡ßÅ‡¶®, ‡ß®‡ß¶‡ß®‡ß©"
    }
  ];

  const filteredImages = activeCategory === 'all' 
    ? images 
    : images.filter(image => image.category === activeCategory);

  const openModal = (image) => {
    setSelectedImage(image);
  };

  const closeModal = () => {
    setSelectedImage(null);
  };

  const nextImage = () => {
    const currentIndex = filteredImages.findIndex(img => img.id === selectedImage.id);
    const nextIndex = (currentIndex + 1) % filteredImages.length;
    setSelectedImage(filteredImages[nextIndex]);
  };

  const prevImage = () => {
    const currentIndex = filteredImages.findIndex(img => img.id === selectedImage.id);
    const prevIndex = (currentIndex - 1 + filteredImages.length) % filteredImages.length;
    setSelectedImage(filteredImages[prevIndex]);
  };

  return (
    <div className="min-h-screen">
      {/* Hero Section */}
      <section className="bg-gradient-to-r from-green-600 to-blue-600 text-white py-20">
        <div className="container mx-auto px-4 text-center">
          <h1 className="text-5xl font-bold mb-6 animate-fade-in">
            ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶ó‡ßç‡¶Ø‡¶æ‡¶≤‡¶æ‡¶∞‡ßÄ
          </h1>
          <p className="text-xl max-w-3xl mx-auto opacity-90">
            ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶¨‡¶ø‡¶≠‡¶ø‡¶®‡ßç‡¶® ‡¶ï‡¶æ‡¶∞‡ßç‡¶Ø‡¶ï‡ßç‡¶∞‡¶Æ ‡¶ì ‡¶Ö‡¶®‡ßÅ‡¶∑‡ßç‡¶†‡¶æ‡¶®‡ßá‡¶∞ ‡¶∏‡ßç‡¶Æ‡ßÉ‡¶§‡¶ø‡¶ö‡¶æ‡¶∞‡¶£‡•§ 
            ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶õ‡¶¨‡¶ø ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶∏‡ßá‡¶¨‡¶æ‡¶∞ ‡¶ó‡¶≤‡ßç‡¶™ ‡¶¨‡¶≤‡ßá‡•§
          </p>
        </div>
      </section>

      {/* Category Filter */}
      <section className="py-12 bg-white sticky top-20 z-40 shadow-md">
        <div className="container mx-auto px-4">
          <div className="flex flex-wrap justify-center gap-4">
            {categories.map((category) => (
              <button
                key={category.id}
                onClick={() => setActiveCategory(category.id)}
                className={`flex items-center space-x-2 px-6 py-3 rounded-full font-semibold transition-all duration-300 ${
                  activeCategory === category.id
                    ? 'bg-green-600 text-white shadow-lg transform scale-105'
                    : 'bg-gray-100 text-gray-700 hover:bg-green-100 hover:text-green-600'
                }`}
              >
                <span className="text-xl">{category.icon}</span>
                <span>{category.name}</span>
              </button>
            ))}
          </div>
        </div>
      </section>

      {/* Gallery Grid */}
      <section className="py-20 bg-gray-50">
        <div className="container mx-auto px-4">
          <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
            {filteredImages.map((image, index) => (
              <div 
                key={image.id}
                className="group relative overflow-hidden rounded-lg aspect-square cursor-pointer transform transition-all duration-300 hover:scale-105 hover:shadow-xl animate-fade-in"
                style={{ animationDelay: `${index * 0.1}s` }}
                onClick={() => openModal(image)}
              >
                {/* Image Placeholder */}
                <div className="w-full h-full bg-gradient-to-br from-green-400 to-blue-500 flex items-center justify-center">
                  <span className="text-white text-4xl">
                    {categories.find(cat => cat.id === image.category)?.icon}
                  </span>
                </div>

                {/* Overlay */}
                <div className="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-70 transition-all duration-300 flex items-center justify-center">
                  <div className="text-white text-center opacity-0 group-hover:opacity-100 transition-opacity duration-300 p-4">
                    <h3 className="text-lg font-semibold mb-2">{image.title}</h3>
                    <p className="text-sm opacity-90">{image.date}</p>
                    <div className="mt-3">
                      <span className="bg-white bg-opacity-20 px-3 py-1 rounded-full text-xs">
                        ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®
                      </span>
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>

          {/* No Results */}
          {filteredImages.length === 0 && (
            <div className="text-center py-20">
              <div className="text-6xl mb-4">üì∑</div>
              <h3 className="text-2xl font-semibold text-gray-600 mb-2">
                ‡¶ï‡ßã‡¶®‡ßã ‡¶õ‡¶¨‡¶ø ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø
              </h3>
              <p className="text-gray-500">
                ‡¶è‡¶á ‡¶ï‡ßç‡¶Ø‡¶æ‡¶ü‡ßá‡¶ó‡¶∞‡¶ø‡¶§‡ßá ‡¶è‡¶ñ‡¶®‡ßã ‡¶ï‡ßã‡¶®‡ßã ‡¶õ‡¶¨‡¶ø ‡¶Ü‡¶™‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡¶®‡¶ø‡•§
              </p>
            </div>
          )}
        </div>
      </section>

      {/* Modal */}
      {selectedImage && (
        <div className="fixed inset-0 bg-black bg-opacity-90 z-50 flex items-center justify-center p-4">
          <div className="relative max-w-4xl w-full">
            {/* Close Button */}
            <button
              onClick={closeModal}
              className="absolute top-4 right-4 text-white text-3xl hover:text-gray-300 transition-colors z-10"
            >
              √ó
            </button>

            {/* Navigation Buttons */}
            <button
              onClick={prevImage}
              className="absolute left-4 top-1/2 transform -translate-y-1/2 text-white text-3xl hover:text-gray-300 transition-colors z-10"
            >
              ‚Äπ
            </button>
            <button
              onClick={nextImage}
              className="absolute right-4 top-1/2 transform -translate-y-1/2 text-white text-3xl hover:text-gray-300 transition-colors z-10"
            >
              ‚Ä∫
            </button>

            {/* Image */}
            <div className="bg-white rounded-lg overflow-hidden">
              <div className="aspect-video bg-gradient-to-br from-green-400 to-blue-500 flex items-center justify-center">
                <span className="text-white text-6xl">
                  {categories.find(cat => cat.id === selectedImage.category)?.icon}
                </span>
              </div>
              
              {/* Image Info */}
              <div className="p-6">
                <h2 className="text-2xl font-bold text-gray-800 mb-2">
                  {selectedImage.title}
                </h2>
                <p className="text-gray-600 mb-4">
                  {selectedImage.description}
                </p>
                <div className="flex items-center justify-between">
                  <span className="text-sm text-gray-500">
                    {selectedImage.date}
                  </span>
                  <span className="bg-green-100 text-green-600 px-3 py-1 rounded-full text-sm font-medium">
                    {categories.find(cat => cat.id === selectedImage.category)?.name}
                  </span>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Statistics */}
      <section className="py-20 bg-white">
        <div className="container mx-auto px-4">
          <div className="text-center mb-16">
            <h2 className="text-4xl font-bold text-gray-800 mb-4">‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶ï‡¶æ‡¶∞‡ßç‡¶Ø‡¶ï‡ßç‡¶∞‡¶Æ‡ßá‡¶∞ ‡¶™‡¶∞‡¶ø‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶®</h2>
            <p className="text-xl text-gray-600">
              ‡¶õ‡¶¨‡¶ø‡¶∞ ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡ßá ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶ï‡¶æ‡¶ú‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶≠‡¶æ‡¶¨
            </p>
          </div>
          
          <div className="grid grid-cols-2 md:grid-cols-4 gap-8">
            {[
              { number: "‡ß´‡ß¶‡ß¶+", label: "‡¶õ‡¶¨‡¶ø ‡¶∏‡¶Ç‡¶ó‡ßç‡¶∞‡¶π" },
              { number: "‡ßß‡ß¶‡ß¶+", label: "‡¶ï‡¶æ‡¶∞‡ßç‡¶Ø‡¶ï‡ßç‡¶∞‡¶Æ ‡¶®‡¶•‡¶ø‡¶≠‡ßÅ‡¶ï‡ßç‡¶§" },
              { number: "‡ß´‡ß¶+", label: "‡¶∏‡ßç‡¶•‡¶æ‡¶® ‡¶™‡¶∞‡¶ø‡¶¶‡¶∞‡ßç‡¶∂‡¶®" },
              { number: "‡ßÆ+", label: "‡¶¨‡¶õ‡¶∞‡ßá‡¶∞ ‡¶á‡¶§‡¶ø‡¶π‡¶æ‡¶∏" }
            ].map((stat, index) => (
              <div key={index} className="text-center">
                <div className="text-4xl md:text-5xl font-bold text-green-600 mb-2">
                  {stat.number}
                </div>
                <div className="text-lg text-gray-600">
                  {stat.label}
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>
    </div>
  );
}
