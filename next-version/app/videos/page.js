'use client';
import { useState } from 'react';

export default function Videos() {
  const [activeCategory, setActiveCategory] = useState('all');
  const [selectedVideo, setSelectedVideo] = useState(null);

  const categories = [
    { id: 'all', name: '‡¶∏‡¶¨ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì', icon: 'üé¨' },
    { id: 'documentary', name: '‡¶°‡¶ï‡ßÅ‡¶Æ‡ßá‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡¶ø', icon: 'üìπ' },
    { id: 'events', name: '‡¶Ö‡¶®‡ßÅ‡¶∑‡ßç‡¶†‡¶æ‡¶®', icon: 'üéâ' },
    { id: 'testimonial', name: '‡¶∏‡¶æ‡¶ï‡ßç‡¶∑‡¶æ‡ßé‡¶ï‡¶æ‡¶∞', icon: 'üé§' },
    { id: 'training', name: '‡¶™‡ßç‡¶∞‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶£', icon: 'üéì' },
    { id: 'awareness', name: '‡¶∏‡¶ö‡ßá‡¶§‡¶®‡¶§‡¶æ', icon: 'üì¢' }
  ];

  const videos = [
    {
      id: 1,
      title: "‡¶Ü‡¶π‡¶æ‡¶Æ‡ßç‡¶Æ‡¶¶ ‡¶´‡¶æ‡¶â‡¶®‡ßç‡¶°‡ßá‡¶∂‡¶®‡ßá‡¶∞ ‡¶Ø‡¶æ‡¶§‡ßç‡¶∞‡¶æ",
      category: "documentary",
      description: "‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡ßÆ ‡¶¨‡¶õ‡¶∞‡ßá‡¶∞ ‡¶∏‡ßá‡¶¨‡¶æ‡¶∞ ‡¶á‡¶§‡¶ø‡¶π‡¶æ‡¶∏ ‡¶è‡¶¨‡¶Ç ‡¶Ö‡¶∞‡ßç‡¶ú‡¶®‡ßá‡¶∞ ‡¶ó‡¶≤‡ßç‡¶™",
      duration: "‡ßß‡ß´:‡ß©‡ß¶",
      views: "‡ßß‡ß®,‡ß´‡ß¶‡ß¶",
      date: "‡ßß‡ß´ ‡¶ú‡¶æ‡¶®‡ßÅ‡¶Ø‡¶º‡¶æ‡¶∞‡¶ø, ‡ß®‡ß¶‡ß®‡ß´",
      thumbnail: "/videos/thumb1.jpg"
    },
    {
      id: 2,
      title: "‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ ‡¶¨‡ßÉ‡¶§‡ßç‡¶§‡¶ø ‡¶™‡ßç‡¶∞‡¶¶‡¶æ‡¶® ‡¶Ö‡¶®‡ßÅ‡¶∑‡ßç‡¶†‡¶æ‡¶® ‡ß®‡ß¶‡ß®‡ß´",
      category: "events",
      description: "‡¶Æ‡ßá‡¶ß‡¶æ‡¶¨‡ßÄ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ‡¶¶‡ßá‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶¨‡ßÉ‡¶§‡ßç‡¶§‡¶ø ‡¶™‡ßç‡¶∞‡¶¶‡¶æ‡¶® ‡¶Ö‡¶®‡ßÅ‡¶∑‡ßç‡¶†‡¶æ‡¶®‡ßá‡¶∞ ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì",
      duration: "‡ß®‡ß´:‡ßß‡ß´",
      views: "‡ßÆ,‡ß≠‡ß´‡ß¶",
      date: "‡ßß‡ß¶ ‡¶ú‡¶æ‡¶®‡ßÅ‡¶Ø‡¶º‡¶æ‡¶∞‡¶ø, ‡ß®‡ß¶‡ß®‡ß´",
      thumbnail: "/videos/thumb2.jpg"
    },
    {
      id: 3,
      title: "‡¶â‡¶™‡¶ï‡¶æ‡¶∞‡¶≠‡ßã‡¶ó‡ßÄ‡¶¶‡ßá‡¶∞ ‡¶∏‡¶æ‡¶ï‡ßç‡¶∑‡¶æ‡ßé‡¶ï‡¶æ‡¶∞",
      category: "testimonial",
      description: "‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶™‡¶∞‡¶ø‡¶¨‡¶æ‡¶∞‡¶ó‡ßÅ‡¶≤‡ßã‡¶∞ ‡¶Ö‡¶≠‡¶ø‡¶ú‡ßç‡¶û‡¶§‡¶æ ‡¶ì ‡¶Æ‡¶§‡¶æ‡¶Æ‡¶§",
      duration: "‡ßß‡ß®:‡ß™‡ß´",
      views: "‡ß¨,‡ß®‡ß¶‡ß¶",
      date: "‡ß´ ‡¶ú‡¶æ‡¶®‡ßÅ‡¶Ø‡¶º‡¶æ‡¶∞‡¶ø, ‡ß®‡ß¶‡ß®‡ß´",
      thumbnail: "/videos/thumb3.jpg"
    },
    {
      id: 4,
      title: "‡¶ï‡¶æ‡¶∞‡¶ø‡¶ó‡¶∞‡¶ø ‡¶™‡ßç‡¶∞‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶£ ‡¶ï‡¶∞‡ßç‡¶Æ‡¶∂‡¶æ‡¶≤‡¶æ",
      category: "training",
      description: "‡¶Ø‡ßÅ‡¶¨‡¶ï‡¶¶‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ï‡¶Æ‡ßç‡¶™‡¶ø‡¶â‡¶ü‡¶æ‡¶∞ ‡¶ì ‡¶ï‡¶æ‡¶∞‡¶ø‡¶ó‡¶∞‡¶ø ‡¶™‡ßç‡¶∞‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶£‡ßá‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì",
      duration: "‡ß©‡ß¶:‡ß®‡ß¶",
      views: "‡ß™,‡ßÆ‡ßØ‡ß¶",
      date: "‡ß®‡ßÆ ‡¶°‡¶ø‡¶∏‡ßá‡¶Æ‡ßç‡¶¨‡¶∞, ‡ß®‡ß¶‡ß®‡ß™",
      thumbnail: "/videos/thumb4.jpg"
    },
    {
      id: 5,
      title: "‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø ‡¶∏‡¶ö‡ßá‡¶§‡¶®‡¶§‡¶æ ‡¶ï‡ßç‡¶Ø‡¶æ‡¶Æ‡ßç‡¶™‡ßá‡¶á‡¶®",
      category: "awareness",
      description: "‡¶ï‡¶Æ‡¶ø‡¶â‡¶®‡¶ø‡¶ü‡¶ø ‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø ‡¶∏‡¶ö‡ßá‡¶§‡¶®‡¶§‡¶æ ‡¶¨‡ßÉ‡¶¶‡ßç‡¶ß‡¶ø‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶™‡ßç‡¶∞‡¶ö‡¶æ‡¶∞‡¶£‡¶æ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì",
      duration: "‡ßÆ:‡ßß‡ß¶",
      views: "‡ßØ,‡ß©‡ß´‡ß¶",
      date: "‡ß®‡ß¶ ‡¶°‡¶ø‡¶∏‡ßá‡¶Æ‡ßç‡¶¨‡¶∞, ‡ß®‡ß¶‡ß®‡ß™",
      thumbnail: "/videos/thumb5.jpg"
    },
    {
      id: 6,
      title: "‡¶¨‡¶æ‡¶∞‡ßç‡¶∑‡¶ø‡¶ï ‡¶∏‡¶Æ‡ßç‡¶Æ‡ßá‡¶≤‡¶® ‡ß®‡ß¶‡ß®‡ß™",
      category: "events",
      description: "‡¶∏‡ßç‡¶¨‡ßá‡¶ö‡ßç‡¶õ‡¶æ‡¶∏‡ßá‡¶¨‡¶ï‡¶¶‡ßá‡¶∞ ‡¶¨‡¶æ‡¶∞‡ßç‡¶∑‡¶ø‡¶ï ‡¶∏‡¶Æ‡ßç‡¶Æ‡ßá‡¶≤‡¶®‡ßá‡¶∞ ‡¶π‡¶æ‡¶á‡¶≤‡¶æ‡¶á‡¶ü‡¶∏",
      duration: "‡ß™‡ß´:‡ß©‡ß¶",
      views: "‡ßß‡ß´,‡ß¨‡ß≠‡ß¶",
      date: "‡ßß‡ß´ ‡¶°‡¶ø‡¶∏‡ßá‡¶Æ‡ßç‡¶¨‡¶∞, ‡ß®‡ß¶‡ß®‡ß™",
      thumbnail: "/videos/thumb6.jpg"
    },
    {
      id: 7,
      title: "‡¶Æ‡¶π‡¶ø‡¶≤‡¶æ ‡¶ï‡ßç‡¶∑‡¶Æ‡¶§‡¶æ‡¶Ø‡¶º‡¶® ‡¶™‡ßç‡¶∞‡ßã‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ",
      category: "training",
      description: "‡¶Æ‡¶π‡¶ø‡¶≤‡¶æ‡¶¶‡ßá‡¶∞ ‡¶Ü‡¶∞‡ßç‡¶•‡¶ø‡¶ï ‡¶∏‡ßç‡¶¨‡¶æ‡¶¨‡¶≤‡¶Æ‡ßç‡¶¨‡¶ø‡¶§‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶™‡ßç‡¶∞‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶£ ‡¶ï‡¶∞‡ßç‡¶Æ‡¶∏‡ßÇ‡¶ö‡¶ø",
      duration: "‡ß®‡ß¶:‡ß™‡ß´",
      views: "‡ß≠,‡ß®‡ß©‡ß¶",
      date: "‡ßß‡ß¶ ‡¶°‡¶ø‡¶∏‡ßá‡¶Æ‡ßç‡¶¨‡¶∞, ‡ß®‡ß¶‡ß®‡ß™",
      thumbnail: "/videos/thumb7.jpg"
    },
    {
      id: 8,
      title: "‡¶¶‡ßÅ‡¶∞‡ßç‡¶Ø‡ßã‡¶ó ‡¶§‡ßç‡¶∞‡¶æ‡¶£ ‡¶ï‡¶æ‡¶∞‡ßç‡¶Ø‡¶ï‡ßç‡¶∞‡¶Æ",
      category: "documentary",
      description: "‡¶¨‡¶®‡ßç‡¶Ø‡¶æ ‡¶Ü‡¶ï‡ßç‡¶∞‡¶æ‡¶®‡ßç‡¶§ ‡¶è‡¶≤‡¶æ‡¶ï‡¶æ‡¶Ø‡¶º ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶§‡ßç‡¶∞‡¶æ‡¶£ ‡¶ï‡¶æ‡¶∞‡ßç‡¶Ø‡¶ï‡ßç‡¶∞‡¶Æ‡ßá‡¶∞ ‡¶°‡¶ï‡ßÅ‡¶Æ‡ßá‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡¶ø",
      duration: "‡ßß‡ßÆ:‡ß®‡ß´",
      views: "‡ßß‡ßß,‡ß™‡ßÆ‡ß¶",
      date: "‡ß´ ‡¶°‡¶ø‡¶∏‡ßá‡¶Æ‡ßç‡¶¨‡¶∞, ‡ß®‡ß¶‡ß®‡ß™",
      thumbnail: "/videos/thumb8.jpg"
    }
  ];

  const filteredVideos = activeCategory === 'all' 
    ? videos 
    : videos.filter(video => video.category === activeCategory);

  const openModal = (video) => {
    setSelectedVideo(video);
  };

  const closeModal = () => {
    setSelectedVideo(null);
  };

  return (
    <div className="min-h-screen">
      {/* Hero Section */}
      <section className="bg-gradient-to-r from-green-600 to-blue-600 text-white py-20">
        <div className="container mx-auto px-4 text-center">
          <h1 className="text-5xl font-bold mb-6 animate-fade-in">
            ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶ó‡ßç‡¶Ø‡¶æ‡¶≤‡¶æ‡¶∞‡ßÄ
          </h1>
          <p className="text-xl max-w-3xl mx-auto opacity-90">
            ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶ï‡¶æ‡¶∞‡ßç‡¶Ø‡¶ï‡ßç‡¶∞‡¶Æ, ‡¶Ö‡¶®‡ßÅ‡¶∑‡ßç‡¶†‡¶æ‡¶® ‡¶è‡¶¨‡¶Ç ‡¶∏‡ßá‡¶¨‡¶æ‡¶∞ ‡¶ó‡¶≤‡ßç‡¶™ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì‡¶∞ ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡ßá ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®‡•§ 
            ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶Æ‡¶ø‡¶∂‡¶®‡ßá‡¶∞ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶Ö‡¶Ç‡¶∂‡•§
          </p>
        </div>
      </section>

      {/* Category Filter */}
      <section className="py-12 bg-white sticky top-20 z-40 shadow-md">
        <div className="container mx-auto px-4">
          <div className="flex flex-wrap justify-center gap-4">
            {categories.map((category) => (
              <button
                key={category.id}
                onClick={() => setActiveCategory(category.id)}
                className={`flex items-center space-x-2 px-6 py-3 rounded-full font-semibold transition-all duration-300 ${
                  activeCategory === category.id
                    ? 'bg-green-600 text-white shadow-lg transform scale-105'
                    : 'bg-gray-100 text-gray-700 hover:bg-green-100 hover:text-green-600'
                }`}
              >
                <span className="text-xl">{category.icon}</span>
                <span>{category.name}</span>
              </button>
            ))}
          </div>
        </div>
      </section>

      {/* Featured Video */}
      {filteredVideos.length > 0 && (
        <section className="py-12 bg-gray-50">
          <div className="container mx-auto px-4">
            <h2 className="text-3xl font-bold text-center text-gray-800 mb-8">
              ‡¶´‡¶ø‡¶ö‡¶æ‡¶∞‡ßç‡¶° ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì
            </h2>
            <div className="max-w-4xl mx-auto">
              <div 
                className="relative aspect-video bg-gradient-to-br from-green-400 to-blue-500 rounded-xl overflow-hidden cursor-pointer group"
                onClick={() => openModal(filteredVideos[0])}
              >
                <div className="absolute inset-0 flex items-center justify-center">
                  <div className="w-20 h-20 bg-white bg-opacity-20 rounded-full flex items-center justify-center group-hover:bg-opacity-30 transition-all duration-300">
                    <div className="w-0 h-0 border-l-8 border-l-white border-t-6 border-t-transparent border-b-6 border-b-transparent ml-1"></div>
                  </div>
                </div>
                <div className="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black to-transparent p-6">
                  <h3 className="text-2xl font-bold text-white mb-2">
                    {filteredVideos[0].title}
                  </h3>
                  <p className="text-white opacity-90 mb-2">
                    {filteredVideos[0].description}
                  </p>
                  <div className="flex items-center space-x-4 text-sm text-white opacity-75">
                    <span>‚è±Ô∏è {filteredVideos[0].duration}</span>
                    <span>üëÅÔ∏è {filteredVideos[0].views} ‡¶¶‡¶∞‡ßç‡¶∂‡¶ï</span>
                    <span>üìÖ {filteredVideos[0].date}</span>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </section>
      )}

      {/* Videos Grid */}
      <section className="py-20 bg-white">
        <div className="container mx-auto px-4">
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {filteredVideos.slice(1).map((video, index) => (
              <div 
                key={video.id}
                className="bg-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-2 cursor-pointer animate-fade-in"
                style={{ animationDelay: `${index * 0.1}s` }}
                onClick={() => openModal(video)}
              >
                {/* Video Thumbnail */}
                <div className="relative aspect-video bg-gradient-to-br from-green-400 to-blue-500 rounded-t-xl overflow-hidden group">
                  <div className="absolute inset-0 flex items-center justify-center">
                    <div className="w-16 h-16 bg-white bg-opacity-20 rounded-full flex items-center justify-center group-hover:bg-opacity-30 transition-all duration-300">
                      <div className="w-0 h-0 border-l-6 border-l-white border-t-4 border-t-transparent border-b-4 border-b-transparent ml-1"></div>
                    </div>
                  </div>
                  
                  {/* Duration Badge */}
                  <div className="absolute bottom-2 right-2 bg-black bg-opacity-75 text-white px-2 py-1 rounded text-sm">
                    {video.duration}
                  </div>
                </div>

                {/* Video Info */}
                <div className="p-6">
                  <h3 className="text-xl font-bold text-gray-800 mb-2 line-clamp-2">
                    {video.title}
                  </h3>
                  <p className="text-gray-600 mb-4 text-sm line-clamp-3">
                    {video.description}
                  </p>
                  
                  {/* Video Stats */}
                  <div className="flex items-center justify-between text-sm text-gray-500 mb-4">
                    <span className="flex items-center space-x-1">
                      <span>üëÅÔ∏è</span>
                      <span>{video.views} ‡¶¶‡¶∞‡ßç‡¶∂‡¶ï</span>
                    </span>
                    <span>{video.date}</span>
                  </div>

                  {/* Category Badge */}
                  <div className="flex items-center justify-between">
                    <span className="bg-green-100 text-green-600 px-3 py-1 rounded-full text-sm font-medium">
                      {categories.find(cat => cat.id === video.category)?.name}
                    </span>
                    <button className="text-green-600 hover:text-green-700 font-medium text-sm">
                      ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶® ‚Üí
                    </button>
                  </div>
                </div>
              </div>
            ))}
          </div>

          {/* No Results */}
          {filteredVideos.length === 0 && (
            <div className="text-center py-20">
              <div className="text-6xl mb-4">üé¨</div>
              <h3 className="text-2xl font-semibold text-gray-600 mb-2">
                ‡¶ï‡ßã‡¶®‡ßã ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø
              </h3>
              <p className="text-gray-500">
                ‡¶è‡¶á ‡¶ï‡ßç‡¶Ø‡¶æ‡¶ü‡ßá‡¶ó‡¶∞‡¶ø‡¶§‡ßá ‡¶è‡¶ñ‡¶®‡ßã ‡¶ï‡ßã‡¶®‡ßã ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶Ü‡¶™‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡¶®‡¶ø‡•§
              </p>
            </div>
          )}
        </div>
      </section>

      {/* Video Modal */}
      {selectedVideo && (
        <div className="fixed inset-0 bg-black bg-opacity-90 z-50 flex items-center justify-center p-4">
          <div className="relative max-w-6xl w-full">
            {/* Close Button */}
            <button
              onClick={closeModal}
              className="absolute top-4 right-4 text-white text-3xl hover:text-gray-300 transition-colors z-10"
            >
              √ó
            </button>

            {/* Video Player */}
            <div className="bg-white rounded-lg overflow-hidden">
              <div className="aspect-video bg-gradient-to-br from-green-400 to-blue-500 flex items-center justify-center">
                <div className="text-center text-white">
                  <div className="w-24 h-24 bg-white bg-opacity-20 rounded-full flex items-center justify-center mx-auto mb-4">
                    <div className="w-0 h-0 border-l-8 border-l-white border-t-6 border-t-transparent border-b-6 border-b-transparent ml-1"></div>
                  </div>
                  <p className="text-lg opacity-90">‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶™‡ßç‡¶≤‡ßá‡¶Ø‡¶º‡¶æ‡¶∞</p>
                  <p className="text-sm opacity-75">({selectedVideo.duration})</p>
                </div>
              </div>
              
              {/* Video Info */}
              <div className="p-6">
                <h2 className="text-2xl font-bold text-gray-800 mb-2">
                  {selectedVideo.title}
                </h2>
                <p className="text-gray-600 mb-4">
                  {selectedVideo.description}
                </p>
                <div className="flex items-center justify-between">
                  <div className="flex items-center space-x-4 text-sm text-gray-500">
                    <span>üëÅÔ∏è {selectedVideo.views} ‡¶¶‡¶∞‡ßç‡¶∂‡¶ï</span>
                    <span>üìÖ {selectedVideo.date}</span>
                  </div>
                  <span className="bg-green-100 text-green-600 px-3 py-1 rounded-full text-sm font-medium">
                    {categories.find(cat => cat.id === selectedVideo.category)?.name}
                  </span>
                </div>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Statistics */}
      <section className="py-20 bg-gradient-to-r from-green-600 to-blue-600 text-white">
        <div className="container mx-auto px-4">
          <div className="text-center mb-16">
            <h2 className="text-4xl font-bold mb-4">‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶™‡¶∞‡¶ø‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ‡¶®</h2>
            <p className="text-xl opacity-90">
              ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶ï‡¶®‡ßç‡¶ü‡ßá‡¶®‡ßç‡¶ü‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶≠‡¶æ‡¶¨
            </p>
          </div>
          
          <div className="grid grid-cols-2 md:grid-cols-4 gap-8">
            {[
              { number: "‡ßß‡ß¶‡ß¶+", label: "‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶™‡ßç‡¶∞‡¶ï‡¶æ‡¶∂‡¶ø‡¶§" },
              { number: "‡ß´‡ß¶,‡ß¶‡ß¶‡ß¶+", label: "‡¶Æ‡ßã‡¶ü ‡¶¶‡¶∞‡ßç‡¶∂‡¶ï" },
              { number: "‡ß®‡ß´+", label: "‡¶ò‡¶®‡ßç‡¶ü‡¶æ ‡¶ï‡¶®‡ßç‡¶ü‡ßá‡¶®‡ßç‡¶ü" },
              { number: "‡ßØ‡ß´%", label: "‡¶™‡¶ú‡¶ø‡¶ü‡¶ø‡¶≠ ‡¶´‡¶ø‡¶°‡¶¨‡ßç‡¶Ø‡¶æ‡¶ï" }
            ].map((stat, index) => (
              <div key={index} className="text-center">
                <div className="text-4xl md:text-5xl font-bold mb-2">
                  {stat.number}
                </div>
                <div className="text-lg opacity-90">
                  {stat.label}
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>
    </div>
  );
}
