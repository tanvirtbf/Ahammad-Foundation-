"use client";

import { useState, useEffect, useRef } from "react";
import Image from "next/image";

const AboutPage = () => {
  const [isVisible, setIsVisible] = useState({});
  const sectionRefs = useRef({});

  const teamMembers = [
    {
      name: "ржорзЛрж╣рж╛ржорзНржоржж ржЖрж╣рж╛ржорзНржоржж",
      position: "ржкрзНрж░рждрж┐рж╖рзНржарж╛рждрж╛ ржУ ржЪрзЗржпрж╝рж╛рж░ржорзНржпрж╛ржи",
      image: "/assets/user-1.png",
      description:
        "рж╕ржорж╛ржЬрж╕рзЗржмрж╛ржпрж╝ рзирзж ржмржЫрж░рзЗрж░ ржЕржнрж┐ржЬрзНржЮрждрж╛ рж╕ржорзНржкржирзНржи ржПржХржЬржи ржирж┐ржмрзЗржжрж┐рждржкрзНрж░рж╛ржг ржмрзНржпржХрзНрждрж┐рждрзНржмред",
    },
    {
      name: "ржлрж╛рждрзЗржорж╛ ржЦрж╛рждрзБржи",
      position: "ржирж┐рж░рзНржмрж╛рж╣рзА ржкрж░рж┐ржЪрж╛рж▓ржХ",
      image: "/assets/user-2.png",
      description: "рж╢рж┐ржХрзНрж╖рж╛ ржУ рж╕рзНржмрж╛рж╕рзНржерзНржп рж╕рзЗржмрж╛ржпрж╝ ржмрж┐рж╢рзЗрж╖ ржЕржнрж┐ржЬрзНржЮрждрж╛ рж╕ржорзНржкржирзНржиред",
    },
    {
      name: "ржЖржмрзНржжрзБрж▓ ржХрж░рж┐ржо",
      position: "ржкрзНрж░рзЛржЧрзНрж░рж╛ржо ржорзНржпрж╛ржирзЗржЬрж╛рж░",
      image: "/assets/user-3.png",
      description: "ржХржорж┐ржЙржирж┐ржЯрж┐ ржбрзЗржнрзЗрж▓ржкржорзЗржирзНржЯ ржПржмржВ ржкрзНрж░ржХрж▓рзНржк ржмрж╛рж╕рзНрждржмрж╛ржпрж╝ржирзЗ ржжржХрзНрж╖ред",
    },
    {
      name: "рж░рж╛рж╢рж┐ржжрж╛ ржмрзЗржЧржо",
      position: "ржЕрж░рзНрже ржкрж░рж┐ржЪрж╛рж▓ржХ",
      image: "/assets/user-4.png",
      description: "ржЖрж░рзНржерж┐ржХ ржмрзНржпржмрж╕рзНржерж╛ржкржирж╛ ржУ рж╕рзНржмржЪрзНржЫрждрж╛ ржирж┐рж╢рзНржЪрж┐рждржХрж░ржгрзЗ ржЕржнрж┐ржЬрзНржЮред",
    },
  ];

  const achievements = [
    {
      year: "рзирзжрззрзо",
      title: "ржлрж╛ржЙржирзНржбрзЗрж╢ржи ржкрзНрж░рждрж┐рж╖рзНржарж╛",
      description: "ржЖрж╣рж╛ржорзНржоржж ржлрж╛ржЙржирзНржбрзЗрж╢ржирзЗрж░ ржпрж╛рждрзНрж░рж╛ рж╢рзБрж░рзБ",
    },
    {
      year: "рзирзжрззрзп",
      title: "ржкрзНрж░ржержо рж╢рж┐ржХрзНрж╖рж╛ ржХрж░рзНржорж╕рзВржЪрж┐",
      description: "рззрзжрзж ржЬржи рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзАржХрзЗ ржмрзГрждрзНрждрж┐ ржкрзНрж░ржжрж╛ржи",
    },
    {
      year: "рзирзжрзирзж",
      title: "ржХрзЛржнрж┐ржб-рззрзп рж╕рж╣рж╛ржпрж╝рждрж╛",
      description: "рзлрзжрзжрзж ржкрж░рж┐ржмрж╛рж░рзЗ ржЦрж╛ржжрзНржп рж╕рж╣рж╛ржпрж╝рждрж╛",
    },
    {
      year: "рзирзжрзирзз",
      title: "рж╕рзНржмрж╛рж╕рзНржерзНржп ржХрзНржпрж╛ржорзНржк ржЪрж╛рж▓рзБ",
      description: "ржорж╛рж╕рж┐ржХ ржмрж┐ржирж╛ржорзВрж▓рзНржпрзЗ ржЪрж┐ржХрж┐рзОрж╕рж╛ рж╕рзЗржмрж╛",
    },
    {
      year: "рзирзжрзирзи",
      title: "рж╕рзНржмрзЗржЪрзНржЫрж╛рж╕рзЗржмржХ ржирзЗржЯржУржпрж╝рж╛рж░рзНржХ",
      description: "рзирзжрзж+ рж╕рзНржмрзЗржЪрзНржЫрж╛рж╕рзЗржмржХ ржирж┐ржпрж╝рзЛржЧ",
    },
    {
      year: "рзирзжрзирзй",
      title: "ржЖржирзНрждрж░рзНржЬрж╛рждрж┐ржХ рж╕рзНржмрзАржХрзГрждрж┐",
      description: "рж╕рзЗрж░рж╛ ржПржиржЬрж┐ржУ ржкрзБрж░рж╕рзНржХрж╛рж░ ржкрзНрж░рж╛ржкрзНрждрж┐",
    },
  ];

  useEffect(() => {
    const observers = {};

    Object.keys(sectionRefs.current).forEach((key) => {
      if (sectionRefs.current[key]) {
        observers[key] = new IntersectionObserver(
          ([entry]) => {
            if (entry.isIntersecting) {
              setIsVisible((prev) => ({ ...prev, [key]: true }));
            }
          },
          { threshold: 0.3 }
        );
        observers[key].observe(sectionRefs.current[key]);
      }
    });

    return () => {
      Object.values(observers).forEach((observer) => observer.disconnect());
    };
  }, []);

  const setSectionRef = (key) => (el) => {
    sectionRefs.current[key] = el;
  };

  return (
    <div className="min-h-screen">
      {/* Hero Section */}
      <section className="relative h-96 lg:h-[500px] bg-gradient-to-r from-green-600 to-green-700 flex items-center">
        <div className="absolute inset-0 bg-black bg-opacity-30"></div>
        <div className="container relative z-10">
          <div className="text-center text-white">
            <h1 className="text-4xl md:text-5xl lg:text-6xl font-bold mb-6 text-shadow-lg">
              ржЖржорж╛ржжрзЗрж░ рж╕ржорзНржкрж░рзНржХрзЗ
            </h1>
            <p className="text-lg md:text-xl lg:text-2xl text-green-100 max-w-3xl mx-auto leading-relaxed text-shadow">
              ржорж╛ржиржмрждрж╛рж░ рж╕рзЗржмрж╛ржпрж╝ ржирж┐ржмрзЗржжрж┐ржд ржПржХржЯрж┐ ржЕрж▓рж╛ржнржЬржиржХ рж╕ржВрж╕рзНржерж╛
            </p>
          </div>
        </div>
      </section>

      {/* Mission & Vision */}
      <section
        ref={setSectionRef("mission")}
        className="section-padding bg-white"
      >
        <div className="container">
          <div className="grid lg:grid-cols-2 gap-12 lg:gap-16 items-center">
            <div
              className={`transform transition-all duration-1000 ${
                isVisible.mission
                  ? "translate-x-0 opacity-100"
                  : "-translate-x-10 opacity-0"
              }`}
            >
              <div className="relative">
                <Image
                  src="/assets/about.jpg"
                  alt="ржЖржорж╛ржжрзЗрж░ ржорж┐рж╢ржи"
                  width={600}
                  height={400}
                  className="rounded-2xl shadow-2xl"
                />
                <div className="absolute -bottom-6 -right-6 bg-green-600 text-white p-6 rounded-xl shadow-xl">
                  <div className="text-center">
                    <div className="text-3xl font-bold">рзл+</div>
                    <div className="text-sm">ржмржЫрж░рзЗрж░ рж╕рзЗржмрж╛</div>
                  </div>
                </div>
              </div>
            </div>

            <div
              className={`transform transition-all duration-1000 delay-300 ${
                isVisible.mission
                  ? "translate-x-0 opacity-100"
                  : "translate-x-10 opacity-0"
              }`}
            >
              <div className="mb-10">
                <h2 className="text-3xl md:text-4xl lg:text-5xl font-bold text-gray-800 mb-6 leading-tight">
                  ржЖржорж╛ржжрзЗрж░ ржорж┐рж╢ржи
                </h2>
                <div className="w-20 h-1 bg-green-600 rounded mb-8"></div>
                <p className="text-gray-600 text-lg lg:text-xl leading-relaxed mb-8">
                  ржЖрж╣рж╛ржорзНржоржж ржлрж╛ржЙржирзНржбрзЗрж╢ржирзЗрж░ ржорзВрж▓ рж▓ржХрзНрж╖рзНржп рж╣рж▓рзЛ рж╕ржорж╛ржЬрзЗрж░ рж╕ржмржЪрзЗржпрж╝рзЗ ржЕрж╕рж╣рж╛ржпрж╝ ржУ
                  ржжрзБрж╕рзНрже ржорж╛ржирзБрж╖ржжрзЗрж░ ржкрж╛рж╢рзЗ ржжрж╛ржБржбрж╝рж╛ржирзЛред ржЖржорж░рж╛ ржмрж┐рж╢рзНржмрж╛рж╕ ржХрж░рж┐ ржпрзЗ ржкрзНрж░рждрж┐ржЯрж┐
                  ржорж╛ржирзБрж╖рзЗрж░ ржорзМрж▓рж┐ржХ ржЕржзрж┐ржХрж╛рж░ рж░ржпрж╝рзЗржЫрзЗ рж╢рж┐ржХрзНрж╖рж╛, рж╕рзНржмрж╛рж╕рзНржерзНржпрж╕рзЗржмрж╛ ржПржмржВ ржПржХржЯрж┐
                  ржорж░рзНржпрж╛ржжрж╛ржкрзВрж░рзНржг ржЬрзАржмржиржпрж╛рждрзНрж░рж╛рж░ред
                </p>
              </div>

              <div className="mb-8">
                <h3 className="text-2xl font-bold text-gray-800 mb-4">
                  ржЖржорж╛ржжрзЗрж░ ржнрж┐рж╢ржи
                </h3>
                <p className="text-gray-600 text-lg leading-relaxed">
                  ржПржХржЯрж┐ ржирзНржпрж╛ржпрж╝ржмрж┐ржЪрж╛рж░ржкрзВрж░рзНржг ржУ ржХрж▓рзНржпрж╛ржгржХрж░ рж╕ржорж╛ржЬ ржЧржбрж╝рзЗ рждрзЛрж▓рж╛ ржпрзЗржЦрж╛ржирзЗ ржХрзЗржЙ
                  ржЕрж╕рж╣рж╛ржпрж╝ ржерж╛ржХржмрзЗ ржирж╛ред ржЖржорж╛ржжрзЗрж░ рж╕рзНржмржкрзНржи рж╣рж▓рзЛ ржПржоржи ржПржХржЯрж┐ ржмрж╛ржВрж▓рж╛ржжрзЗрж╢ ржпрзЗржЦрж╛ржирзЗ
                  ржкрзНрж░рждрж┐ржЯрж┐ рж╢рж┐рж╢рзБ рж╢рж┐ржХрзНрж╖рж╛рж░ рж╕рзБржпрзЛржЧ ржкрж╛ржмрзЗ, ржкрзНрж░рждрж┐ржЯрж┐ ржкрж░рж┐ржмрж╛рж░ рж╕рзНржмрж╛рж╕рзНржерзНржпрж╕рзЗржмрж╛
                  ржкрж╛ржмрзЗ ржПржмржВ ржХрзЗржЙ ржЦрж╛ржжрзНржпрж╛ржнрж╛ржмрзЗ ржерж╛ржХржмрзЗ ржирж╛ред
                </p>
              </div>

              <div className="grid grid-cols-2 gap-4">
                <div className="bg-green-50 p-4 rounded-lg">
                  <div className="text-2xl font-bold text-green-600 mb-2">
                    рззрзлрзж+
                  </div>
                  <div className="text-gray-600 font-medium">
                    рж╕ржорзНржкржирзНржи ржкрзНрж░ржХрж▓рзНржк
                  </div>
                </div>
                <div className="bg-green-50 p-4 rounded-lg">
                  <div className="text-2xl font-bold text-green-600 mb-2">
                    рзлрзжрзжрзж+
                  </div>
                  <div className="text-gray-600 font-medium">ржЙржкржХрж╛рж░ржнрзЛржЧрзА</div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Values */}
      <section ref={setSectionRef("values")} className="py-20 bg-gray-50">
        <div className="container mx-auto px-4">
          <div
            className={`text-center mb-16 transform transition-all duration-1000 ${
              isVisible.values
                ? "translate-y-0 opacity-100"
                : "translate-y-10 opacity-0"
            }`}
          >
            <h2 className="text-4xl font-bold text-gray-800 mb-4">
              ржЖржорж╛ржжрзЗрж░ ржорзВрж▓рзНржпржмрзЛржз
            </h2>
            <div className="w-20 h-1 bg-green-600 rounded mx-auto mb-6"></div>
            <p className="text-gray-600 text-lg max-w-3xl mx-auto">
              ржЖржорж╛ржжрзЗрж░ ржХрж╛ржЬрзЗрж░ ржнрж┐рждрзНрждрж┐ рж╣рж▓рзЛ ржХрж┐ржЫрзБ ржорзВрж▓ ржирзАрждрж┐ ржпрж╛ ржЖржорж╛ржжрзЗрж░ ржкрзНрж░рждрж┐ржЯрж┐ ржХрж╛рж░рзНржпржХрзНрж░ржорзЗ
              ржкрзНрж░рждрж┐ржлрж▓рж┐ржд рж╣ржпрж╝
            </p>
          </div>

          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
            {[
              {
                icon: "ЁЯдЭ",
                title: "рж╕рзНржмржЪрзНржЫрждрж╛",
                desc: "ржЖржорж╛ржжрзЗрж░ рж╕ржХрж▓ ржХрж╛рж░рзНржпржХрзНрж░ржо рж╕ржорзНржкрзВрж░рзНржг рж╕рзНржмржЪрзНржЫ ржУ ржЬржмрж╛ржмржжрж┐рж╣рж┐ржорзВрж▓ржХ",
              },
              {
                icon: "тЭдя╕П",
                title: "рж╕рзЗржмрж╛",
                desc: "ржирж┐ржГрж╕рзНржмрж╛рж░рзНрже рж╕рзЗржмрж╛рж░ ржорж╛ржирж╕рж┐ржХрждрж╛ ржирж┐ржпрж╝рзЗ ржХрж╛ржЬ ржХрж░рж┐",
              },
              {
                icon: "ЁЯОп",
                title: "ржжржХрзНрж╖рждрж╛",
                desc: "рж╕рж░рзНржмрзЛржЪрзНржЪ ржжржХрзНрж╖рждрж╛рж░ рж╕рж╛ржерзЗ рж╕ржорзНржкржжрзЗрж░ рж╕ржжрзНржмрзНржпржмрж╣рж╛рж░",
              },
              {
                icon: "ЁЯМЯ",
                title: "ржЙрзОржХрж░рзНрж╖рждрж╛",
                desc: "ржкрзНрж░рждрж┐ржЯрж┐ ржХрж╛ржЬрзЗ ржЙрзОржХрж░рзНрж╖рждрж╛рж░ ржЬржирзНржп ржкрзНрж░ржЪрзЗрж╖рзНржЯрж╛",
              },
            ].map((value, index) => (
              <div
                key={index}
                className={`text-center bg-white p-6 rounded-xl shadow-lg transform transition-all duration-1000 hover:scale-105 ${
                  isVisible.values
                    ? "translate-y-0 opacity-100"
                    : "translate-y-10 opacity-0"
                }`}
                style={{ transitionDelay: `${index * 200}ms` }}
              >
                <div className="text-4xl mb-4">{value.icon}</div>
                <h3 className="text-xl font-bold text-gray-800 mb-3">
                  {value.title}
                </h3>
                <p className="text-gray-600">{value.desc}</p>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Team Section */}
      <section ref={setSectionRef("team")} className="py-20 bg-white">
        <div className="container mx-auto px-4">
          <div
            className={`text-center mb-16 transform transition-all duration-1000 ${
              isVisible.team
                ? "translate-y-0 opacity-100"
                : "translate-y-10 opacity-0"
            }`}
          >
            <h2 className="text-4xl font-bold text-gray-800 mb-4">
              ржЖржорж╛ржжрзЗрж░ ржЯрж┐ржо
            </h2>
            <div className="w-20 h-1 bg-green-600 rounded mx-auto mb-6"></div>
            <p className="text-gray-600 text-lg max-w-3xl mx-auto">
              ржЕржнрж┐ржЬрзНржЮ ржУ ржирж┐ржмрзЗржжрж┐рждржкрзНрж░рж╛ржг ржмрзНржпржХрзНрждрж┐ржжрзЗрж░ ржирж┐ржпрж╝рзЗ ржЧржарж┐ржд ржЖржорж╛ржжрзЗрж░ ржЯрж┐ржо
            </p>
          </div>

          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
            {teamMembers.map((member, index) => (
              <div
                key={index}
                className={`text-center bg-gray-50 p-6 rounded-xl shadow-lg transform transition-all duration-1000 hover:scale-105 ${
                  isVisible.team
                    ? "translate-y-0 opacity-100"
                    : "translate-y-10 opacity-0"
                }`}
                style={{ transitionDelay: `${index * 200}ms` }}
              >
                <div className="relative w-24 h-24 mx-auto mb-4">
                  <Image
                    src={member.image}
                    alt={member.name}
                    fill
                    className="rounded-full object-cover"
                  />
                </div>
                <h3 className="text-xl font-bold text-gray-800 mb-2">
                  {member.name}
                </h3>
                <p className="text-green-600 font-semibold mb-3">
                  {member.position}
                </p>
                <p className="text-gray-600 text-sm">{member.description}</p>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Timeline */}
      <section ref={setSectionRef("timeline")} className="py-20 bg-gray-50">
        <div className="container mx-auto px-4">
          <div
            className={`text-center mb-16 transform transition-all duration-1000 ${
              isVisible.timeline
                ? "translate-y-0 opacity-100"
                : "translate-y-10 opacity-0"
            }`}
          >
            <h2 className="text-4xl font-bold text-gray-800 mb-4">
              ржЖржорж╛ржжрзЗрж░ ржпрж╛рждрзНрж░рж╛
            </h2>
            <div className="w-20 h-1 bg-green-600 rounded mx-auto mb-6"></div>
            <p className="text-gray-600 text-lg max-w-3xl mx-auto">
              рзирзжрззрзо рж╕рж╛рж▓ ржерзЗржХрзЗ ржЖржЬ ржкрж░рзНржпржирзНржд ржЖржорж╛ржжрзЗрж░ ржЕрж░рзНржЬржирж╕ржорзВрж╣
            </p>
          </div>

          <div className="relative">
            <div className="absolute left-1/2 transform -translate-x-1/2 w-1 h-full bg-green-200"></div>

            {achievements.map((achievement, index) => (
              <div
                key={index}
                className={`relative flex items-center mb-12 ${
                  index % 2 === 0 ? "justify-start" : "justify-end"
                }`}
              >
                <div
                  className={`w-1/2 ${
                    index % 2 === 0 ? "pr-8" : "pl-8"
                  } transform transition-all duration-1000 ${
                    isVisible.timeline
                      ? "translate-y-0 opacity-100"
                      : "translate-y-10 opacity-0"
                  }`}
                  style={{ transitionDelay: `${index * 200}ms` }}
                >
                  <div
                    className={`bg-white p-6 rounded-xl shadow-lg ${
                      index % 2 === 0 ? "text-right" : "text-left"
                    }`}
                  >
                    <div className="text-2xl font-bold text-green-600 mb-2">
                      {achievement.year}
                    </div>
                    <h3 className="text-xl font-bold text-gray-800 mb-2">
                      {achievement.title}
                    </h3>
                    <p className="text-gray-600">{achievement.description}</p>
                  </div>
                </div>

                <div className="absolute left-1/2 transform -translate-x-1/2 w-4 h-4 bg-green-600 rounded-full border-4 border-white shadow-lg"></div>
              </div>
            ))}
          </div>
        </div>
      </section>
    </div>
  );
};

export default AboutPage;
