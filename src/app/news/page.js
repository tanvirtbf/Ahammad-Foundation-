'use client';

import { useState, useEffect, useRef } from 'react';
import Image from 'next/image';

const NewsPage = () => {
  const [activeCategory, setActiveCategory] = useState('all');
  const [currentPage, setCurrentPage] = useState(1);
  const [isVisible, setIsVisible] = useState({});
  const sectionRefs = useRef({});
  const articlesPerPage = 6;

  const categories = [
    { id: 'all', name: 'рж╕ржХрж▓ рж╕ржВржмрж╛ржж', icon: 'ЁЯУ░' },
    { id: 'programs', name: 'ржХрж░рзНржорж╕рзВржЪрж┐', icon: 'ЁЯУЛ' },
    { id: 'events', name: 'ржЕржирзБрж╖рзНржарж╛ржи', icon: 'ЁЯОЙ' },
    { id: 'achievements', name: 'ржЕрж░рзНржЬржи', icon: 'ЁЯПЖ' },
    { id: 'announcements', name: 'ржШрзЛрж╖ржгрж╛', icon: 'ЁЯУв' }
  ];

  const newsArticles = [
    {
      id: 1,
      title: 'ржЖрж╣рж╛ржорзНржоржж ржлрж╛ржЙржирзНржбрзЗрж╢ржи рж╕рзЗрж░рж╛ ржПржиржЬрж┐ржУ ржкрзБрж░рж╕рзНржХрж╛рж░ ржкрзЗржпрж╝рзЗржЫрзЗ',
      category: 'achievements',
      image: '/assets/gallery-4.png',
      excerpt: 'ржЬрж╛рждрзАржпрж╝ ржПржиржЬрж┐ржУ ржкрзБрж░рж╕рзНржХрж╛рж░ рзирзжрзирзй ржП ржЖрж╣рж╛ржорзНржоржж ржлрж╛ржЙржирзНржбрзЗрж╢ржи рж╕рзЗрж░рж╛ рж╕рзЗржмрж╛ржорзВрж▓ржХ рж╕ржВрж╕рзНржерж╛рж░ ржкрзБрж░рж╕рзНржХрж╛рж░ ржЕрж░рзНржЬржи ржХрж░рзЗржЫрзЗред',
      content: 'ржЧржд рззрзл ржбрж┐рж╕рзЗржорзНржмрж░ рзирзжрзирзй рждрж╛рж░рж┐ржЦрзЗ ржЕржирзБрж╖рзНржарж┐ржд ржЬрж╛рждрзАржпрж╝ ржПржиржЬрж┐ржУ ржкрзБрж░рж╕рзНржХрж╛рж░ ржЕржирзБрж╖рзНржарж╛ржирзЗ ржЖрж╣рж╛ржорзНржоржж ржлрж╛ржЙржирзНржбрзЗрж╢ржи рж╕рзЗрж░рж╛ рж╕рзЗржмрж╛ржорзВрж▓ржХ рж╕ржВрж╕рзНржерж╛рж░ ржкрзБрж░рж╕рзНржХрж╛рж░ ржЕрж░рзНржЬржи ржХрж░рзЗржЫрзЗред ржПржЗ ржкрзБрж░рж╕рзНржХрж╛рж░ ржкрзНрж░ржжрж╛ржи ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ ржлрж╛ржЙржирзНржбрзЗрж╢ржирзЗрж░ ржЧржд ржкрж╛ржБржЪ ржмржЫрж░рзЗрж░ ржЕрж╕рж╛ржзрж╛рж░ржг рж╕рзЗржмрж╛рж░ рж╕рзНржмрзАржХрзГрждрж┐рж╕рзНржмрж░рзВржкред',
      author: 'ржкрзНрж░рж╢рж╛рж╕ржи ржмрж┐ржнрж╛ржЧ',
      date: 'рззрзл ржбрж┐рж╕рзЗржорзНржмрж░, рзирзжрзирзй',
      readTime: 'рзй ржорж┐ржирж┐ржЯ',
      tags: ['ржкрзБрж░рж╕рзНржХрж╛рж░', 'рж╕рзНржмрзАржХрзГрждрж┐', 'ржПржиржЬрж┐ржУ']
    },
    {
      id: 2,
      title: 'ржирждрзБржи рж╢рж┐ржХрзНрж╖рж╛ ржмрзГрждрзНрждрж┐ ржХрж░рзНржорж╕рзВржЪрж┐ ржЪрж╛рж▓рзБ',
      category: 'programs',
      image: '/assets/program1.jpg',
      excerpt: 'рзирзжрзирзк рж╕рж╛рж▓рзЗрж░ ржЬржирзНржп рзлрзжрзж ржорзЗржзрж╛ржмрзА рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзАрж░ ржЬржирзНржп ржирждрзБржи ржмрзГрждрзНрждрж┐ ржХрж░рзНржорж╕рзВржЪрж┐ ржШрзЛрж╖ржгрж╛ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред',
      content: 'ржЖрж╣рж╛ржорзНржоржж ржлрж╛ржЙржирзНржбрзЗрж╢ржи рзирзжрзирзк рж╕рж╛рж▓рзЗрж░ ржЬржирзНржп ржПржХржЯрж┐ ржмрж┐рж╢рзЗрж╖ рж╢рж┐ржХрзНрж╖рж╛ ржмрзГрждрзНрждрж┐ ржХрж░рзНржорж╕рзВржЪрж┐ ржЪрж╛рж▓рзБ ржХрж░рзЗржЫрзЗред ржПржЗ ржХрж░рзНржорж╕рзВржЪрж┐рж░ ржЖржУрждрж╛ржпрж╝ рзлрзжрзж ржорзЗржзрж╛ржмрзА ржХрж┐ржирзНрждрзБ ржжрж░рж┐ржжрзНрж░ рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзАржХрзЗ ржмрзГрждрзНрждрж┐ ржкрзНрж░ржжрж╛ржи ржХрж░рж╛ рж╣ржмрзЗред',
      author: 'рж╢рж┐ржХрзНрж╖рж╛ ржмрж┐ржнрж╛ржЧ',
      date: 'рззрзж ржЬрж╛ржирзБржпрж╝рж╛рж░рж┐, рзирзжрзирзк',
      readTime: 'рзл ржорж┐ржирж┐ржЯ',
      tags: ['рж╢рж┐ржХрзНрж╖рж╛', 'ржмрзГрждрзНрждрж┐', 'ржХрж░рзНржорж╕рзВржЪрж┐']
    },
    {
      id: 3,
      title: 'ржмрж╛рж░рзНрж╖рж┐ржХ рж╕рзНржмрж╛рж╕рзНржерзНржп ржХрзНржпрж╛ржорзНржк рж╕ржлрж▓ржнрж╛ржмрзЗ рж╕ржорзНржкржирзНржи',
      category: 'events',
      image: '/assets/program2.jpg',
      excerpt: 'рждрж┐ржи ржжрж┐ржиржмрзНржпрж╛ржкрзА ржмрж╛рж░рзНрж╖рж┐ржХ рж╕рзНржмрж╛рж╕рзНржерзНржп ржХрзНржпрж╛ржорзНржкрзЗ рзирзжрзжрзж+ рж░рзЛржЧрзА ржмрж┐ржирж╛ржорзВрж▓рзНржпрзЗ ржЪрж┐ржХрж┐рзОрж╕рж╛ рж╕рзЗржмрж╛ ржкрзЗржпрж╝рзЗржЫрзЗржиред',
      content: 'ржЧржд рзирзл-рзирзн ржиржнрзЗржорзНржмрж░ ржЕржирзБрж╖рзНржарж┐ржд рждрж┐ржи ржжрж┐ржиржмрзНржпрж╛ржкрзА ржмрж╛рж░рзНрж╖рж┐ржХ рж╕рзНржмрж╛рж╕рзНржерзНржп ржХрзНржпрж╛ржорзНржкрзЗ рзирзжрзжрзж+ рж░рзЛржЧрзА ржмрж┐ржирж╛ржорзВрж▓рзНржпрзЗ ржЪрж┐ржХрж┐рзОрж╕рж╛ рж╕рзЗржмрж╛ ржкрзЗржпрж╝рзЗржЫрзЗржиред ржПржЗ ржХрзНржпрж╛ржорзНржкрзЗ рзирзж ржЬржи ржЕржнрж┐ржЬрзНржЮ ржбрж╛ржХрзНрждрж╛рж░ рж╕рзЗржмрж╛ ржкрзНрж░ржжрж╛ржи ржХрж░рзЗржЫрзЗржиред',
      author: 'рж╕рзНржмрж╛рж╕рзНржерзНржп ржмрж┐ржнрж╛ржЧ',
      date: 'рзирзо ржиржнрзЗржорзНржмрж░, рзирзжрзирзй',
      readTime: 'рзк ржорж┐ржирж┐ржЯ',
      tags: ['рж╕рзНржмрж╛рж╕рзНржерзНржп', 'ржХрзНржпрж╛ржорзНржк', 'ржЪрж┐ржХрж┐рзОрж╕рж╛']
    },
    {
      id: 4,
      title: 'рж╢рзАрждржмрж╕рзНрждрзНрж░ ржмрж┐рждрж░ржг ржХрж░рзНржорж╕рзВржЪрж┐ рж╢рзБрж░рзБ',
      category: 'announcements',
      image: '/assets/unnamed.jpg',
      excerpt: 'ржЖрж╕ржирзНржи рж╢рзАрждрзЗ ржЕрж╕рж╣рж╛ржпрж╝ ржорж╛ржирзБрж╖ржжрзЗрж░ ржЬржирзНржп рж╢рзАрждржмрж╕рзНрждрзНрж░ ржмрж┐рждрж░ржг ржХрж░рзНржорж╕рзВржЪрж┐ рж╢рзБрж░рзБ рж╣ржпрж╝рзЗржЫрзЗред',
      content: 'рж╢рзАрждржХрж╛рж▓ ржЖрж╕рж╛рж░ рж╕рж╛ржерзЗ рж╕рж╛ржерзЗ ржЖрж╣рж╛ржорзНржоржж ржлрж╛ржЙржирзНржбрзЗрж╢ржи ржЕрж╕рж╣рж╛ржпрж╝ ржорж╛ржирзБрж╖ржжрзЗрж░ ржЬржирзНржп рж╢рзАрждржмрж╕рзНрждрзНрж░ ржмрж┐рждрж░ржг ржХрж░рзНржорж╕рзВржЪрж┐ рж╢рзБрж░рзБ ржХрж░рзЗржЫрзЗред ржПржЗ ржХрж░рзНржорж╕рзВржЪрж┐рж░ ржЖржУрждрж╛ржпрж╝ рззрзжрзжрзж ржкрж░рж┐ржмрж╛рж░рзЗ ржХржорзНржмрж▓ ржУ ржЧрж░ржо ржХрж╛ржкржбрж╝ ржмрж┐рждрж░ржг ржХрж░рж╛ рж╣ржмрзЗред',
      author: 'рж╕рзЗржмрж╛ ржмрж┐ржнрж╛ржЧ',
      date: 'рзирзж ржбрж┐рж╕рзЗржорзНржмрж░, рзирзжрзирзй',
      readTime: 'рзй ржорж┐ржирж┐ржЯ',
      tags: ['рж╢рзАрждржмрж╕рзНрждрзНрж░', 'ржмрж┐рждрж░ржг', 'рж╕рж╣рж╛ржпрж╝рждрж╛']
    },
    {
      id: 5,
      title: 'ржирждрзБржи рж╕рзНржмрзЗржЪрзНржЫрж╛рж╕рзЗржмржХ ржкрзНрж░рж╢рж┐ржХрзНрж╖ржг ржХрж░рзНржорж╕рзВржЪрж┐',
      category: 'programs',
      image: '/assets/about.jpg',
      excerpt: 'ржирждрзБржи рж╕рзНржмрзЗржЪрзНржЫрж╛рж╕рзЗржмржХржжрзЗрж░ ржЬржирзНржп ржмрж┐рж╢рзЗрж╖ ржкрзНрж░рж╢рж┐ржХрзНрж╖ржг ржХрж░рзНржорж╕рзВржЪрж┐рж░ ржЖржпрж╝рзЛржЬржи ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред',
      content: 'ржЖрж╣рж╛ржорзНржоржж ржлрж╛ржЙржирзНржбрзЗрж╢ржирзЗ ржпрзЛржЧржжрж╛ржиржХрж╛рж░рзА ржирждрзБржи рж╕рзНржмрзЗржЪрзНржЫрж╛рж╕рзЗржмржХржжрзЗрж░ ржЬржирзНржп ржПржХржЯрж┐ ржмрж┐рж╢рзЗрж╖ ржкрзНрж░рж╢рж┐ржХрзНрж╖ржг ржХрж░рзНржорж╕рзВржЪрж┐рж░ ржЖржпрж╝рзЛржЬржи ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред ржПржЗ ржкрзНрж░рж╢рж┐ржХрзНрж╖ржгрзЗ рж╕рзЗржмрж╛рж░ ржорж╛ржирж╕рж┐ржХрждрж╛ ржУ ржХрзМрж╢рж▓ рж╢рзЗржЦрж╛ржирзЛ рж╣ржмрзЗред',
      author: 'ржкрзНрж░рж╢рж┐ржХрзНрж╖ржг ржмрж┐ржнрж╛ржЧ',
      date: 'рзл ржЬрж╛ржирзБржпрж╝рж╛рж░рж┐, рзирзжрзирзк',
      readTime: 'рзк ржорж┐ржирж┐ржЯ',
      tags: ['ржкрзНрж░рж╢рж┐ржХрзНрж╖ржг', 'рж╕рзНржмрзЗржЪрзНржЫрж╛рж╕рзЗржмржХ', 'ржжржХрзНрж╖рждрж╛']
    },
    {
      id: 6,
      title: 'рж░ржоржЬрж╛ржи ржЦрж╛ржжрзНржп рж╕рж╣рж╛ржпрж╝рждрж╛ ржХрж░рзНржорж╕рзВржЪрж┐ ржШрзЛрж╖ржгрж╛',
      category: 'announcements',
      image: '/assets/program3.jpg',
      excerpt: 'ржЖрж╕ржирзНржи рж░ржоржЬрж╛ржи ржорж╛рж╕рзЗ ржжрж░рж┐ржжрзНрж░ ржкрж░рж┐ржмрж╛рж░ржЧрзБрж▓рзЛрж░ ржЬржирзНржп ржмрж┐рж╢рзЗрж╖ ржЦрж╛ржжрзНржп рж╕рж╣рж╛ржпрж╝рждрж╛ ржХрж░рзНржорж╕рзВржЪрж┐ ржШрзЛрж╖ржгрж╛ред',
      content: 'ржЖрж╕ржирзНржи рж░ржоржЬрж╛ржи ржорж╛рж╕рзЗ ржжрж░рж┐ржжрзНрж░ ржкрж░рж┐ржмрж╛рж░ржЧрзБрж▓рзЛрж░ ржЬржирзНржп ржЖрж╣рж╛ржорзНржоржж ржлрж╛ржЙржирзНржбрзЗрж╢ржи ржмрж┐рж╢рзЗрж╖ ржЦрж╛ржжрзНржп рж╕рж╣рж╛ржпрж╝рждрж╛ ржХрж░рзНржорж╕рзВржЪрж┐ ржШрзЛрж╖ржгрж╛ ржХрж░рзЗржЫрзЗред ржПржЗ ржХрж░рзНржорж╕рзВржЪрж┐рж░ ржЖржУрждрж╛ржпрж╝ рзйрзжрзжрзж ржкрж░рж┐ржмрж╛рж░рзЗ ржЦрж╛ржжрзНржп рж╕рж╛ржоржЧрзНрж░рзА ржмрж┐рждрж░ржг ржХрж░рж╛ рж╣ржмрзЗред',
      author: 'ржЦрж╛ржжрзНржп ржмрж┐ржнрж╛ржЧ',
      date: 'рзз ржлрзЗржмрзНрж░рзБржпрж╝рж╛рж░рж┐, рзирзжрзирзк',
      readTime: 'рзй ржорж┐ржирж┐ржЯ',
      tags: ['рж░ржоржЬрж╛ржи', 'ржЦрж╛ржжрзНржп', 'рж╕рж╣рж╛ржпрж╝рждрж╛']
    },
    {
      id: 7,
      title: 'ржХржорзНржкрж┐ржЙржЯрж╛рж░ ржкрзНрж░рж╢рж┐ржХрзНрж╖ржг ржХрзЗржирзНржжрзНрж░ ржЙржжрзНржмрзЛржзржи',
      category: 'events',
      image: '/assets/gallery-1.png',
      excerpt: 'ржпрзБржмржХржжрзЗрж░ ржЬржирзНржп ржирждрзБржи ржХржорзНржкрж┐ржЙржЯрж╛рж░ ржкрзНрж░рж╢рж┐ржХрзНрж╖ржг ржХрзЗржирзНржжрзНрж░ ржЙржжрзНржмрзЛржзржи ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред',
      content: 'ржЖрж╣рж╛ржорзНржоржж ржлрж╛ржЙржирзНржбрзЗрж╢ржирзЗрж░ ржирждрзБржи ржХржорзНржкрж┐ржЙржЯрж╛рж░ ржкрзНрж░рж╢рж┐ржХрзНрж╖ржг ржХрзЗржирзНржжрзНрж░ ржЙржжрзНржмрзЛржзржи ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред ржПржЗ ржХрзЗржирзНржжрзНрж░рзЗ ржпрзБржмржХрж░рж╛ ржмрж┐ржирж╛ржорзВрж▓рзНржпрзЗ ржХржорзНржкрж┐ржЙржЯрж╛рж░ ржУ ржбрж┐ржЬрж┐ржЯрж╛рж▓ рж╕рж╛ржХрзНрж╖рж░рждрж╛рж░ ржкрзНрж░рж╢рж┐ржХрзНрж╖ржг ржирж┐рждрзЗ ржкрж╛рж░ржмрзЗржиред',
      author: 'ржкрзНрж░ржпрзБржХрзНрждрж┐ ржмрж┐ржнрж╛ржЧ',
      date: 'рззрзо ржиржнрзЗржорзНржмрж░, рзирзжрзирзй',
      readTime: 'рзл ржорж┐ржирж┐ржЯ',
      tags: ['ржХржорзНржкрж┐ржЙржЯрж╛рж░', 'ржкрзНрж░рж╢рж┐ржХрзНрж╖ржг', 'ржпрзБржм']
    },
    {
      id: 8,
      title: 'ржЖржирзНрждрж░рзНржЬрж╛рждрж┐ржХ ржжрж╛рждрж╛ рж╕ржВрж╕рзНржерж╛рж░ рж╕рж╛ржерзЗ ржЪрзБржХрзНрждрж┐',
      category: 'achievements',
      image: '/assets/gallery-2.png',
      excerpt: 'ржПржХржЯрж┐ ржЖржирзНрждрж░рзНржЬрж╛рждрж┐ржХ ржжрж╛рждрж╛ рж╕ржВрж╕рзНржерж╛рж░ рж╕рж╛ржерзЗ ржирждрзБржи ржкрзНрж░ржХрж▓рзНржкрзЗрж░ ржЬржирзНржп ржЪрзБржХрзНрждрж┐ рж╕рзНржмрж╛ржХрзНрж╖рж░рж┐ржд рж╣ржпрж╝рзЗржЫрзЗред',
      content: 'ржЖрж╣рж╛ржорзНржоржж ржлрж╛ржЙржирзНржбрзЗрж╢ржи ржПржХржЯрж┐ ржЖржирзНрждрж░рзНржЬрж╛рждрж┐ржХ ржжрж╛рждрж╛ рж╕ржВрж╕рзНржерж╛рж░ рж╕рж╛ржерзЗ рж╢рж┐ржХрзНрж╖рж╛ ржУ рж╕рзНржмрж╛рж╕рзНржерзНржп ржЦрж╛рждрзЗ ржирждрзБржи ржкрзНрж░ржХрж▓рзНржкрзЗрж░ ржЬржирзНржп ржЪрзБржХрзНрждрж┐ рж╕рзНржмрж╛ржХрзНрж╖рж░ ржХрж░рзЗржЫрзЗред ржПржЗ ржЪрзБржХрзНрждрж┐рж░ ржорж╛ржзрзНржпржорзЗ ржЖрж░рзЛ ржмрзЗрж╢рж┐ ржорж╛ржирзБрж╖рзЗрж░ ржХрж╛ржЫрзЗ рж╕рзЗржмрж╛ ржкрзМржБржЫрж╛ржирзЛ рж╕ржорзНржнржм рж╣ржмрзЗред',
      author: 'ржкрж░рж┐ржЪрж╛рж▓ржирж╛ ржмрзЛрж░рзНржб',
      date: 'рзй ржбрж┐рж╕рзЗржорзНржмрж░, рзирзжрзирзй',
      readTime: 'рзм ржорж┐ржирж┐ржЯ',
      tags: ['ржЪрзБржХрзНрждрж┐', 'ржЖржирзНрждрж░рзНржЬрж╛рждрж┐ржХ', 'ржкрзНрж░ржХрж▓рзНржк']
    },
    {
      id: 9,
      title: 'ржорж╛рждрзГрждрзНржмржХрж╛рж▓рзАржи рж╕рзЗржмрж╛ ржХрж░рзНржорж╕рзВржЪрж┐ рж╕ржорзНржкрзНрж░рж╕рж╛рж░ржг',
      category: 'programs',
      image: '/assets/gallery-3.png',
      excerpt: 'ржЧрж░рзНржнржмрждрзА ржорж╛ржпрж╝рзЗржжрзЗрж░ ржЬржирзНржп ржорж╛рждрзГрждрзНржмржХрж╛рж▓рзАржи рж╕рзЗржмрж╛ ржХрж░рзНржорж╕рзВржЪрж┐ ржЖрж░рзЛ ржПрж▓рж╛ржХрж╛ржпрж╝ рж╕ржорзНржкрзНрж░рж╕рж╛рж░ржг ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред',
      content: 'ржЖрж╣рж╛ржорзНржоржж ржлрж╛ржЙржирзНржбрзЗрж╢ржирзЗрж░ ржорж╛рждрзГрждрзНржмржХрж╛рж▓рзАржи рж╕рзЗржмрж╛ ржХрж░рзНржорж╕рзВржЪрж┐ ржЖрж░рзЛ рззрзжржЯрж┐ ржПрж▓рж╛ржХрж╛ржпрж╝ рж╕ржорзНржкрзНрж░рж╕рж╛рж░ржг ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред ржПржЗ ржХрж░рзНржорж╕рзВржЪрж┐рж░ ржорж╛ржзрзНржпржорзЗ ржЧрж░рзНржнржмрждрзА ржорж╛ржпрж╝рзЗрж░рж╛ ржмрж┐ржирж╛ржорзВрж▓рзНржпрзЗ ржЪрж┐ржХрж┐рзОрж╕рж╛ рж╕рзЗржмрж╛ ржУ ржкрзБрж╖рзНржЯрж┐ рж╕рж╣рж╛ржпрж╝рждрж╛ ржкрж╛ржмрзЗржиред',
      author: 'ржорж╛рждрзГ ржУ рж╢рж┐рж╢рзБ ржмрж┐ржнрж╛ржЧ',
      date: 'рзирзл ржЬрж╛ржирзБржпрж╝рж╛рж░рж┐, рзирзжрзирзк',
      readTime: 'рзк ржорж┐ржирж┐ржЯ',
      tags: ['ржорж╛рждрзГрждрзНржм', 'рж╕рзНржмрж╛рж╕рзНржерзНржп', 'рж╕ржорзНржкрзНрж░рж╕рж╛рж░ржг']
    }
  ];

  const filteredArticles = activeCategory === 'all' 
    ? newsArticles 
    : newsArticles.filter(article => article.category === activeCategory);

  const totalPages = Math.ceil(filteredArticles.length / articlesPerPage);
  const startIndex = (currentPage - 1) * articlesPerPage;
  const currentArticles = filteredArticles.slice(startIndex, startIndex + articlesPerPage);

  useEffect(() => {
    setCurrentPage(1);
  }, [activeCategory]);

  useEffect(() => {
    const observers = {};
    
    Object.keys(sectionRefs.current).forEach(key => {
      if (sectionRefs.current[key]) {
        observers[key] = new IntersectionObserver(
          ([entry]) => {
            if (entry.isIntersecting) {
              setIsVisible(prev => ({ ...prev, [key]: true }));
            }
          },
          { threshold: 0.3 }
        );
        observers[key].observe(sectionRefs.current[key]);
      }
    });

    return () => {
      Object.values(observers).forEach(observer => observer.disconnect());
    };
  }, []);

  const setSectionRef = (key) => (el) => {
    sectionRefs.current[key] = el;
  };

  return (
    <div className="min-h-screen">
      {/* Hero Section */}
      <section className="relative h-96 bg-gradient-to-r from-green-600 to-green-700 flex items-center">
        <div className="absolute inset-0 bg-black bg-opacity-30"></div>
        <div className="container mx-auto px-4 relative z-10">
          <div className="text-center text-white">
            <h1 className="text-5xl font-bold mb-4">рж╕ржВржмрж╛ржж ржУ ржШржЯржирж╛</h1>
            <p className="text-xl text-green-100 max-w-2xl mx-auto">
              ржЖржорж╛ржжрзЗрж░ рж╕рж░рзНржмрж╢рзЗрж╖ ржХрж╛рж░рзНржпржХрзНрж░ржо ржУ ржЕрж░рзНржЬржирзЗрж░ ржЦржмрж░
            </p>
          </div>
        </div>
      </section>

      {/* Filter Categories */}
      <section 
        ref={setSectionRef('filter')}
        className="py-12 bg-white sticky top-26 z-30 shadow-md"
      >
        <div className="container mx-auto px-4">
          <div
            className={`flex flex-wrap justify-center gap-4 transform transition-all duration-1000 ${
              isVisible.filter ? 'translate-y-0 opacity-100' : 'translate-y-10 opacity-0'
            }`}
          >
            {categories.map((category) => (
              <button
                key={category.id}
                onClick={() => setActiveCategory(category.id)}
                className={`flex items-center space-x-2 px-6 py-3 rounded-full font-semibold transition-all duration-300 transform hover:scale-105 ${
                  activeCategory === category.id
                    ? 'bg-green-600 text-white shadow-lg'
                    : 'bg-gray-100 text-gray-700 hover:bg-green-100 hover:text-green-700'
                }`}
              >
                <span className="text-lg">{category.icon}</span>
                <span>{category.name}</span>
              </button>
            ))}
          </div>
        </div>
      </section>

      {/* News Articles */}
      <section 
        ref={setSectionRef('news')}
        className="py-20 bg-gray-50"
      >
        <div className="container mx-auto px-4">
          <div className="grid lg:grid-cols-2 xl:grid-cols-3 gap-8">
            {currentArticles.map((article, index) => (
              <article
                key={article.id}
                className={`bg-white rounded-2xl shadow-lg overflow-hidden hover:shadow-2xl transition-all duration-500 transform hover:-translate-y-2 ${
                  isVisible.news ? 'translate-y-0 opacity-100' : 'translate-y-10 opacity-0'
                }`}
                style={{ transitionDelay: `${index * 150}ms` }}
              >
                <div className="relative h-48 overflow-hidden">
                  <Image
                    src={article.image}
                    alt={article.title}
                    fill
                    className="object-cover transition-transform duration-500 hover:scale-110"
                  />
                  <div className="absolute top-4 left-4 bg-green-600 text-white px-3 py-1 rounded-full text-sm font-semibold">
                    {categories.find(cat => cat.id === article.category)?.name}
                  </div>
                  <div className="absolute bottom-4 right-4 bg-black bg-opacity-70 text-white px-3 py-1 rounded-full text-sm">
                    {article.readTime} ржкржбрж╝рждрзЗ
                  </div>
                </div>
                
                <div className="p-6">
                  <h2 className="text-xl font-bold text-gray-800 mb-3 line-clamp-2">
                    {article.title}
                  </h2>
                  <p className="text-gray-600 mb-4 leading-relaxed line-clamp-3">
                    {article.excerpt}
                  </p>
                  
                  <div className="flex items-center justify-between text-sm text-gray-500 mb-4">
                    <span>рж▓рзЗржЦржХ: {article.author}</span>
                    <span>{article.date}</span>
                  </div>
                  
                  <div className="flex flex-wrap gap-2 mb-4">
                    {article.tags.slice(0, 3).map((tag, idx) => (
                      <span
                        key={idx}
                        className="bg-green-100 text-green-700 px-2 py-1 rounded-full text-xs font-medium"
                      >
                        #{tag}
                      </span>
                    ))}
                  </div>
                  
                  <button className="w-full bg-green-600 hover:bg-green-700 text-white py-3 rounded-lg font-semibold transition-all duration-300 transform hover:scale-105">
                    ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржкржбрж╝рзБржи
                  </button>
                </div>
              </article>
            ))}
          </div>

          {/* Pagination */}
          {totalPages > 1 && (
            <div
              className={`flex justify-center mt-12 transform transition-all duration-1000 delay-600 ${
                isVisible.news ? 'translate-y-0 opacity-100' : 'translate-y-10 opacity-0'
              }`}
            >
              <div className="flex space-x-2">
                <button
                  onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}
                  disabled={currentPage === 1}
                  className="px-4 py-2 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-300"
                >
                  ржкрзВрж░рзНржмржмрж░рзНрждрзА
                </button>
                
                {[...Array(totalPages)].map((_, index) => (
                  <button
                    key={index + 1}
                    onClick={() => setCurrentPage(index + 1)}
                    className={`px-4 py-2 rounded-lg transition-all duration-300 ${
                      currentPage === index + 1
                        ? 'bg-green-600 text-white'
                        : 'bg-white border border-gray-300 hover:bg-gray-50'
                    }`}
                  >
                    {index + 1}
                  </button>
                ))}
                
                <button
                  onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}
                  disabled={currentPage === totalPages}
                  className="px-4 py-2 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-300"
                >
                  ржкрж░ржмрж░рзНрждрзА
                </button>
              </div>
            </div>
          )}
        </div>
      </section>
    </div>
  );
};

export default NewsPage;
