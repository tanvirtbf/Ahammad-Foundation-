'use client';

import { useState, useEffect, useRef } from 'react';
import Image from 'next/image';

const ProgramsPage = () => {
  const [activeCategory, setActiveCategory] = useState('all');
  const [isVisible, setIsVisible] = useState({});
  const sectionRefs = useRef({});

  const categories = [
    { id: 'all', name: '‡¶∏‡¶ï‡¶≤ ‡¶ï‡¶∞‡ßç‡¶Æ‡¶∏‡ßÇ‡¶ö‡¶ø', icon: 'üåü' },
    { id: 'education', name: '‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ', icon: 'üìö' },
    { id: 'health', name: '‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø', icon: 'üè•' },
    { id: 'food', name: '‡¶ñ‡¶æ‡¶¶‡ßç‡¶Ø ‡¶∏‡¶π‡¶æ‡¶Ø‡¶º‡¶§‡¶æ', icon: 'üçΩÔ∏è' },
    { id: 'emergency', name: '‡¶ú‡¶∞‡ßÅ‡¶∞‡¶ø ‡¶∏‡¶π‡¶æ‡¶Ø‡¶º‡¶§‡¶æ', icon: 'üö®' }
  ];

  const programs = [
    {
      id: 1,
      title: '‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ ‡¶¨‡ßÉ‡¶§‡ßç‡¶§‡¶ø ‡¶ï‡¶∞‡ßç‡¶Æ‡¶∏‡ßÇ‡¶ö‡¶ø',
      category: 'education',
      image: '/assets/program1.jpg',
      description: '‡¶Æ‡ßá‡¶ß‡¶æ‡¶¨‡ßÄ ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶¶‡¶∞‡¶ø‡¶¶‡ßç‡¶∞ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ‡¶¶‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶¨‡ßÉ‡¶§‡ßç‡¶§‡¶ø ‡¶™‡ßç‡¶∞‡¶¶‡¶æ‡¶® ‡¶ï‡¶∞‡ßç‡¶Æ‡¶∏‡ßÇ‡¶ö‡¶ø‡•§',
      details: '‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶¨‡¶õ‡¶∞ ‡ßß‡ß¶‡ß¶+ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ‡¶ï‡ßá ‡¶¨‡ßÉ‡¶§‡ßç‡¶§‡¶ø ‡¶™‡ßç‡¶∞‡¶¶‡¶æ‡¶® ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡•§ ‡¶è‡¶á ‡¶ï‡¶∞‡ßç‡¶Æ‡¶∏‡ßÇ‡¶ö‡¶ø‡¶∞ ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡ßá ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ‡¶∞‡¶æ ‡¶§‡¶æ‡¶¶‡ßá‡¶∞ ‡¶™‡¶°‡¶º‡¶æ‡¶∂‡ßã‡¶®‡¶æ ‡¶ö‡¶æ‡¶≤‡¶ø‡¶Ø‡¶º‡ßá ‡¶Ø‡ßá‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‡•§',
      beneficiaries: '‡ßß‡ß®‡ß¶‡ß¶+',
      duration: '‡¶∏‡¶æ‡¶∞‡¶æ ‡¶¨‡¶õ‡¶∞',
      budget: '‡ß´ ‡¶≤‡¶ï‡ßç‡¶∑ ‡¶ü‡¶æ‡¶ï‡¶æ',
      features: ['‡¶Æ‡¶æ‡¶∏‡¶ø‡¶ï ‡¶¨‡ßÉ‡¶§‡ßç‡¶§‡¶ø', '‡¶¨‡¶á-‡¶ñ‡¶æ‡¶§‡¶æ', '‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ‡¶∞ ‡¶´‡¶ø', '‡¶ï‡ßã‡¶ö‡¶ø‡¶Ç ‡¶∏‡¶π‡¶æ‡¶Ø‡¶º‡¶§‡¶æ']
    },
    {
      id: 2,
      title: '‡¶¨‡¶ø‡¶®‡¶æ‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø‡ßá ‡¶ö‡¶ø‡¶ï‡¶ø‡ßé‡¶∏‡¶æ ‡¶∏‡ßá‡¶¨‡¶æ',
      category: 'health',
      image: '/assets/program2.jpg',
      description: '‡¶ó‡¶∞‡¶ø‡¶¨ ‡¶Æ‡¶æ‡¶®‡ßÅ‡¶∑‡¶¶‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶¨‡¶ø‡¶®‡¶æ‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø‡ßá ‡¶ö‡¶ø‡¶ï‡¶ø‡ßé‡¶∏‡¶æ ‡¶∏‡ßá‡¶¨‡¶æ ‡¶ì ‡¶ì‡¶∑‡ßÅ‡¶ß ‡¶¨‡¶ø‡¶§‡¶∞‡¶£‡•§',
      details: '‡¶Æ‡¶æ‡¶∏‡¶ø‡¶ï ‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø ‡¶ï‡ßç‡¶Ø‡¶æ‡¶Æ‡ßç‡¶™‡ßá‡¶∞ ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡ßá ‡¶¨‡¶ø‡¶®‡¶æ‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø‡ßá ‡¶ö‡¶ø‡¶ï‡¶ø‡ßé‡¶∏‡¶æ ‡¶∏‡ßá‡¶¨‡¶æ ‡¶™‡ßç‡¶∞‡¶¶‡¶æ‡¶® ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡•§ ‡¶Ö‡¶≠‡¶ø‡¶ú‡ßç‡¶û ‡¶°‡¶æ‡¶ï‡ßç‡¶§‡¶æ‡¶∞‡¶¶‡ßá‡¶∞ ‡¶§‡¶§‡ßç‡¶§‡ßç‡¶¨‡¶æ‡¶¨‡¶ß‡¶æ‡¶®‡ßá ‡¶è‡¶á ‡¶∏‡ßá‡¶¨‡¶æ ‡¶¶‡ßá‡¶ì‡¶Ø‡¶º‡¶æ ‡¶π‡¶Ø‡¶º‡•§',
      beneficiaries: '‡ßÆ‡ß¶‡ß¶+',
      duration: '‡¶Æ‡¶æ‡¶∏‡¶ø‡¶ï',
      budget: '‡ß© ‡¶≤‡¶ï‡ßç‡¶∑ ‡¶ü‡¶æ‡¶ï‡¶æ',
      features: ['‡¶¨‡¶ø‡¶®‡¶æ‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø‡ßá ‡¶ö‡ßá‡¶ï‡¶Ü‡¶™', '‡¶ì‡¶∑‡ßÅ‡¶ß ‡¶¨‡¶ø‡¶§‡¶∞‡¶£', '‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø ‡¶™‡¶∞‡¶æ‡¶Æ‡¶∞‡ßç‡¶∂', '‡¶∞‡ßá‡¶´‡¶æ‡¶∞‡ßá‡¶≤ ‡¶∏‡ßá‡¶¨‡¶æ']
    },
    {
      id: 3,
      title: '‡¶ñ‡¶æ‡¶¶‡ßç‡¶Ø ‡¶¨‡¶ø‡¶§‡¶∞‡¶£ ‡¶ï‡¶∞‡ßç‡¶Æ‡¶∏‡ßÇ‡¶ö‡¶ø',
      category: 'food',
      image: '/assets/program3.jpg',
      description: '‡¶¶‡ßÅ‡¶∞‡ßç‡¶ó‡¶§ ‡¶è‡¶≤‡¶æ‡¶ï‡¶æ‡¶Ø‡¶º ‡¶ñ‡¶æ‡¶¶‡ßç‡¶Ø ‡¶¨‡¶ø‡¶§‡¶∞‡¶£ ‡¶ì ‡¶∞‡¶Æ‡¶ú‡¶æ‡¶®‡ßá ‡¶á‡¶´‡¶§‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßç‡¶Æ‡¶∏‡ßÇ‡¶ö‡¶ø‡•§',
      details: '‡¶¶‡ßÅ‡¶∞‡ßç‡¶Ø‡ßã‡¶ó‡¶ï‡¶æ‡¶≤‡ßÄ‡¶® ‡¶∏‡¶Æ‡¶Ø‡¶º‡ßá ‡¶è‡¶¨‡¶Ç ‡¶∞‡¶Æ‡¶ú‡¶æ‡¶® ‡¶Æ‡¶æ‡¶∏‡ßá ‡¶¶‡¶∞‡¶ø‡¶¶‡ßç‡¶∞ ‡¶™‡¶∞‡¶ø‡¶¨‡¶æ‡¶∞‡¶ó‡ßÅ‡¶≤‡ßã‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶ñ‡¶æ‡¶¶‡ßç‡¶Ø ‡¶∏‡¶æ‡¶Æ‡¶ó‡ßç‡¶∞‡ßÄ ‡¶¨‡¶ø‡¶§‡¶∞‡¶£ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡•§',
      beneficiaries: '‡ß®‡ß¶‡ß¶‡ß¶+',
      duration: '‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶® ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡¶Ø‡¶º‡ßÄ',
      budget: '‡ßÆ ‡¶≤‡¶ï‡ßç‡¶∑ ‡¶ü‡¶æ‡¶ï‡¶æ',
      features: ['‡¶ö‡¶æ‡¶≤-‡¶°‡¶æ‡¶≤ ‡¶¨‡¶ø‡¶§‡¶∞‡¶£', '‡¶á‡¶´‡¶§‡¶æ‡¶∞ ‡¶™‡ßç‡¶Ø‡¶æ‡¶ï‡ßá‡¶ü', '‡¶™‡ßÅ‡¶∑‡ßç‡¶ü‡¶ø‡¶ï‡¶∞ ‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞', '‡¶™‡¶æ‡¶®‡ßÄ‡¶Ø‡¶º ‡¶ú‡¶≤']
    },
    {
      id: 4,
      title: '‡¶∂‡ßÄ‡¶§‡¶¨‡¶∏‡ßç‡¶§‡ßç‡¶∞ ‡¶¨‡¶ø‡¶§‡¶∞‡¶£',
      category: 'emergency',
      image: '/assets/unnamed.jpg',
      description: '‡¶∂‡ßÄ‡¶§‡¶ï‡¶æ‡¶≤‡ßá ‡¶¶‡¶∞‡¶ø‡¶¶‡ßç‡¶∞ ‡¶Æ‡¶æ‡¶®‡ßÅ‡¶∑‡¶¶‡ßá‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶ï‡¶Æ‡ßç‡¶¨‡¶≤ ‡¶ì ‡¶ó‡¶∞‡¶Æ ‡¶ï‡¶æ‡¶™‡¶°‡¶º ‡¶¨‡¶ø‡¶§‡¶∞‡¶£‡•§',
      details: '‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶∂‡ßÄ‡¶§‡¶ï‡¶æ‡¶≤‡ßá ‡¶Ö‡¶∏‡¶π‡¶æ‡¶Ø‡¶º ‡¶Æ‡¶æ‡¶®‡ßÅ‡¶∑‡¶¶‡ßá‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶ï‡¶Æ‡ßç‡¶¨‡¶≤, ‡¶ö‡¶æ‡¶¶‡¶∞ ‡¶è‡¶¨‡¶Ç ‡¶ó‡¶∞‡¶Æ ‡¶ï‡¶æ‡¶™‡¶°‡¶º ‡¶¨‡¶ø‡¶§‡¶∞‡¶£ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡•§',
      beneficiaries: '‡ß´‡ß¶‡ß¶+',
      duration: '‡¶∂‡ßÄ‡¶§‡¶ï‡¶æ‡¶≤',
      budget: '‡ß® ‡¶≤‡¶ï‡ßç‡¶∑ ‡¶ü‡¶æ‡¶ï‡¶æ',
      features: ['‡¶ï‡¶Æ‡ßç‡¶¨‡¶≤ ‡¶¨‡¶ø‡¶§‡¶∞‡¶£', '‡¶ó‡¶∞‡¶Æ ‡¶ï‡¶æ‡¶™‡¶°‡¶º', '‡¶∂‡¶ø‡¶∂‡ßÅ‡¶¶‡ßá‡¶∞ ‡¶ú‡ßç‡¶Ø‡¶æ‡¶ï‡ßá‡¶ü', '‡¶Æ‡ßã‡¶ú‡¶æ-‡¶ü‡ßÅ‡¶™‡¶ø']
    },
    {
      id: 5,
      title: '‡¶ï‡¶Æ‡ßç‡¶™‡¶ø‡¶â‡¶ü‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶£',
      category: 'education',
      image: '/assets/gallery-1.png',
      description: '‡¶Ø‡ßÅ‡¶¨‡¶ï‡¶¶‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶¨‡¶ø‡¶®‡¶æ‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø‡ßá ‡¶ï‡¶Æ‡ßç‡¶™‡¶ø‡¶â‡¶ü‡¶æ‡¶∞ ‡¶ì ‡¶°‡¶ø‡¶ú‡¶ø‡¶ü‡¶æ‡¶≤ ‡¶∏‡¶æ‡¶ï‡ßç‡¶∑‡¶∞‡¶§‡¶æ ‡¶™‡ßç‡¶∞‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶£‡•§',
      details: '‡¶Ü‡¶ß‡ßÅ‡¶®‡¶ø‡¶ï ‡¶Ø‡ßÅ‡¶ó‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶§‡¶æ‡¶≤ ‡¶Æ‡¶ø‡¶≤‡¶ø‡¶Ø‡¶º‡ßá ‡¶ö‡¶≤‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ø‡ßÅ‡¶¨‡¶ï‡¶¶‡ßá‡¶∞ ‡¶ï‡¶Æ‡ßç‡¶™‡¶ø‡¶â‡¶ü‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶£ ‡¶¶‡ßá‡¶ì‡¶Ø‡¶º‡¶æ ‡¶π‡¶Ø‡¶º‡•§',
      beneficiaries: '‡ß©‡ß¶‡ß¶+',
      duration: '‡ß© ‡¶Æ‡¶æ‡¶∏',
      budget: '‡ßß.‡ß´ ‡¶≤‡¶ï‡ßç‡¶∑ ‡¶ü‡¶æ‡¶ï‡¶æ',
      features: ['‡¶¨‡ßá‡¶∏‡¶ø‡¶ï ‡¶ï‡¶Æ‡ßç‡¶™‡¶ø‡¶â‡¶ü‡¶æ‡¶∞', '‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡¶®‡ßá‡¶ü ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞', '‡¶Æ‡¶æ‡¶á‡¶ï‡ßç‡¶∞‡ßã‡¶∏‡¶´‡¶ü ‡¶Ö‡¶´‡¶ø‡¶∏', '‡¶∏‡¶æ‡¶∞‡ßç‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶ü ‡¶™‡ßç‡¶∞‡¶¶‡¶æ‡¶®']
    },
    {
      id: 6,
      title: '‡¶Æ‡¶æ‡¶§‡ßÉ‡¶§‡ßç‡¶¨‡¶ï‡¶æ‡¶≤‡ßÄ‡¶® ‡¶∏‡ßá‡¶¨‡¶æ',
      category: 'health',
      image: '/assets/gallery-2.png',
      description: '‡¶ó‡¶∞‡ßç‡¶≠‡¶¨‡¶§‡ßÄ ‡¶Æ‡¶æ‡¶Ø‡¶º‡ßá‡¶¶‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶¨‡¶ø‡¶∂‡ßá‡¶∑ ‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø ‡¶∏‡ßá‡¶¨‡¶æ ‡¶ì ‡¶™‡ßÅ‡¶∑‡ßç‡¶ü‡¶ø ‡¶∏‡¶π‡¶æ‡¶Ø‡¶º‡¶§‡¶æ‡•§',
      details: '‡¶ó‡¶∞‡ßç‡¶≠‡¶¨‡¶§‡ßÄ ‡¶Æ‡¶æ‡¶Ø‡¶º‡ßá‡¶¶‡ßá‡¶∞ ‡¶®‡¶ø‡¶Ø‡¶º‡¶Æ‡¶ø‡¶§ ‡¶ö‡ßá‡¶ï‡¶Ü‡¶™, ‡¶™‡ßÅ‡¶∑‡ßç‡¶ü‡¶ø ‡¶∏‡¶π‡¶æ‡¶Ø‡¶º‡¶§‡¶æ ‡¶è‡¶¨‡¶Ç ‡¶™‡ßç‡¶∞‡¶∏‡¶¨‡¶ï‡¶æ‡¶≤‡ßÄ‡¶® ‡¶∏‡ßá‡¶¨‡¶æ ‡¶™‡ßç‡¶∞‡¶¶‡¶æ‡¶® ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡•§',
      beneficiaries: '‡ß®‡ß¶‡ß¶+',
      duration: '‡¶∏‡¶æ‡¶∞‡¶æ ‡¶¨‡¶õ‡¶∞',
      budget: '‡ß™ ‡¶≤‡¶ï‡ßç‡¶∑ ‡¶ü‡¶æ‡¶ï‡¶æ',
      features: ['‡¶®‡¶ø‡¶Ø‡¶º‡¶Æ‡¶ø‡¶§ ‡¶ö‡ßá‡¶ï‡¶Ü‡¶™', '‡¶™‡ßÅ‡¶∑‡ßç‡¶ü‡¶ø ‡¶∏‡¶π‡¶æ‡¶Ø‡¶º‡¶§‡¶æ', '‡¶™‡ßç‡¶∞‡¶∏‡¶¨ ‡¶∏‡¶π‡¶æ‡¶Ø‡¶º‡¶§‡¶æ', '‡¶®‡¶¨‡¶ú‡¶æ‡¶§‡¶ï ‡¶Ø‡¶§‡ßç‡¶®']
    }
  ];

  const filteredPrograms = activeCategory === 'all' 
    ? programs 
    : programs.filter(program => program.category === activeCategory);

  useEffect(() => {
    const observers = {};
    
    Object.keys(sectionRefs.current).forEach(key => {
      if (sectionRefs.current[key]) {
        observers[key] = new IntersectionObserver(
          ([entry]) => {
            if (entry.isIntersecting) {
              setIsVisible(prev => ({ ...prev, [key]: true }));
            }
          },
          { threshold: 0.3 }
        );
        observers[key].observe(sectionRefs.current[key]);
      }
    });

    return () => {
      Object.values(observers).forEach(observer => observer.disconnect());
    };
  }, []);

  const setSectionRef = (key) => (el) => {
    sectionRefs.current[key] = el;
  };

  return (
    <div className="min-h-screen">
      {/* Hero Section */}
      <section className="relative h-96 bg-gradient-to-r from-green-600 to-green-700 flex items-center">
        <div className="absolute inset-0 bg-black bg-opacity-30"></div>
        <div className="container mx-auto px-4 relative z-10">
          <div className="text-center text-white">
            <h1 className="text-5xl font-bold mb-4">‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶ï‡¶æ‡¶∞‡ßç‡¶Ø‡¶ï‡ßç‡¶∞‡¶Æ</h1>
            <p className="text-xl text-green-100 max-w-2xl mx-auto">
              ‡¶∏‡¶Æ‡¶æ‡¶ú‡ßá‡¶∞ ‡¶ï‡¶≤‡ßç‡¶Ø‡¶æ‡¶£‡ßá ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶¨‡¶ø‡¶≠‡¶ø‡¶®‡ßç‡¶® ‡¶∏‡ßá‡¶¨‡¶æ‡¶Æ‡ßÇ‡¶≤‡¶ï ‡¶ï‡¶∞‡ßç‡¶Æ‡¶∏‡ßÇ‡¶ö‡¶ø
            </p>
          </div>
        </div>
      </section>

      {/* Filter Categories */}
      <section 
        ref={setSectionRef('filter')}
        className="py-12 bg-white sticky top-26 z-30 shadow-md"
      >
        <div className="container mx-auto px-4">
          <div
            className={`flex flex-wrap justify-center gap-4 transform transition-all duration-1000 ${
              isVisible.filter ? 'translate-y-0 opacity-100' : 'translate-y-10 opacity-0'
            }`}
          >
            {categories.map((category) => (
              <button
                key={category.id}
                onClick={() => setActiveCategory(category.id)}
                className={`flex items-center space-x-2 px-6 py-3 rounded-full font-semibold transition-all duration-300 transform hover:scale-105 ${
                  activeCategory === category.id
                    ? 'bg-green-600 text-white shadow-lg'
                    : 'bg-gray-100 text-gray-700 hover:bg-green-100 hover:text-green-700'
                }`}
              >
                <span className="text-lg">{category.icon}</span>
                <span>{category.name}</span>
              </button>
            ))}
          </div>
        </div>
      </section>

      {/* Programs Grid */}
      <section 
        ref={setSectionRef('programs')}
        className="py-20 bg-gray-50"
      >
        <div className="container mx-auto px-4">
          <div className="grid lg:grid-cols-2 xl:grid-cols-3 gap-8">
            {filteredPrograms.map((program, index) => (
              <div
                key={program.id}
                className={`bg-white rounded-2xl shadow-lg overflow-hidden hover:shadow-2xl transition-all duration-500 transform hover:-translate-y-2 ${
                  isVisible.programs ? 'translate-y-0 opacity-100' : 'translate-y-10 opacity-0'
                }`}
                style={{ transitionDelay: `${index * 150}ms` }}
              >
                <div className="relative h-48 overflow-hidden">
                  <Image
                    src={program.image}
                    alt={program.title}
                    fill
                    className="object-cover transition-transform duration-500 hover:scale-110"
                  />
                  <div className="absolute top-4 left-4 bg-green-600 text-white px-3 py-1 rounded-full text-sm font-semibold">
                    {categories.find(cat => cat.id === program.category)?.name}
                  </div>
                  <div className="absolute bottom-4 right-4 bg-white bg-opacity-90 px-3 py-1 rounded-full text-sm font-semibold text-gray-800">
                    {program.beneficiaries} ‡¶â‡¶™‡¶ï‡¶æ‡¶∞‡¶≠‡ßã‡¶ó‡ßÄ
                  </div>
                </div>
                
                <div className="p-6">
                  <h3 className="text-xl font-bold text-gray-800 mb-3">
                    {program.title}
                  </h3>
                  <p className="text-gray-600 mb-4 leading-relaxed">
                    {program.description}
                  </p>
                  <p className="text-gray-600 text-sm mb-4 leading-relaxed">
                    {program.details}
                  </p>
                  
                  <div className="grid grid-cols-2 gap-4 mb-4 text-sm">
                    <div>
                      <span className="font-semibold text-gray-700">‡¶∏‡¶Æ‡¶Ø‡¶º‡¶ï‡¶æ‡¶≤:</span>
                      <p className="text-gray-600">{program.duration}</p>
                    </div>
                    <div>
                      <span className="font-semibold text-gray-700">‡¶¨‡¶æ‡¶ú‡ßá‡¶ü:</span>
                      <p className="text-gray-600">{program.budget}</p>
                    </div>
                  </div>
                  
                  <div className="mb-4">
                    <span className="font-semibold text-gray-700 text-sm">‡¶¨‡ßà‡¶∂‡¶ø‡¶∑‡ßç‡¶ü‡ßç‡¶Ø‡¶∏‡¶Æ‡ßÇ‡¶π:</span>
                    <div className="flex flex-wrap gap-2 mt-2">
                      {program.features.map((feature, idx) => (
                        <span
                          key={idx}
                          className="bg-green-100 text-green-700 px-2 py-1 rounded-full text-xs font-medium"
                        >
                          {feature}
                        </span>
                      ))}
                    </div>
                  </div>
                  
                  <button className="w-full bg-green-600 hover:bg-green-700 text-white py-3 rounded-lg font-semibold transition-all duration-300 transform hover:scale-105">
                    ‡¶Ü‡¶∞‡ßã ‡¶ú‡¶æ‡¶®‡ßÅ‡¶®
                  </button>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>
    </div>
  );
};

export default ProgramsPage;
